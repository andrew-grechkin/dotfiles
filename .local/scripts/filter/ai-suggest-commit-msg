#!/usr/bin/env bash

set -Eeuo pipefail

# ABSTRACT: ask ai to suggest a commit message by the changes in git index or in the latest commit

request="Generate a proper commit message for the git diff provided below.

Format the output as:
1. Main commit message line (semantic prefix like feat:, fix:, refactor:, etc.)
2. Empty line
3. Marker '---- BEGIN DESCRIPTION GENERATED BY AI ----'
4. Details section with bullet points explaining the changes
5. Note which Large Language Model was used to generate this description
6. Marker '---- END DESCRIPTION GENERATED BY AI ----'

Example format:
feat: add Amp AI integration and improve development tools

---- BEGIN DESCRIPTION GENERATED BY AI ----
**Details:**
- Added Amp configuration with tool restrictions and MCP server setup
- Created new ai script for AI interactions
- Removed deprecated ai-request script, improved ai-polite
- Enhanced git hooks: added post-checkout for submodules, optimized pre-commit
- Added mkpython script for Python project scaffolding
- Updated development tool configurations and submodules

Generated by: Claude 3.5 Sonnet
---- END DESCRIPTION GENERATED BY AI ----

Requirements:
- Main message: max 72 characters, use semantic commit prefixes
- Details: bullet points with specific changes, no generic descriptions
- Be descriptive and actionable, avoid vague terms like 'misc updates'
- Focus on what functionality was added/changed/removed
- Don't add any additional messages or something which would be outside of described format
- Don't generate TODOs and don't print them

Here is the diff:"

{
    echo "$request";
    if [[ -n "${1:-}" ]]; then
        git show "$1" -- . ':!submodules'
    else
        if (( "$(git diff --staged 2>/dev/null | wc -l)" > 0 )); then
            git diff --staged -- . ':!submodules'
        else
            git show -- . ':!submodules'
        fi
    fi
    echo "> generating commit message ${1:+for $1}" >&2
} | ai
