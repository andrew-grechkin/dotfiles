#!/usr/bin/env perl

use v5.40;

use Getopt::Long qw(:config auto_version bundling no_ignore_case);
use List::Util   qw(first);

my %options = (
    'DIFF_LEFT'    => 1,
    'DIFF_RIGHT'   => 0,
    'DIFF_SYMM'    => 0,
    'INTERSECTION' => 0,
    'UNION'        => 0,
);

my %actions = (
    DIFF_LEFT    => sub {$_[0] == 1},
    DIFF_RIGHT   => sub {$_[0] == 2},
    DIFF_SYMM    => sub {$_[0] <= 2},
    INTERSECTION => sub {$_[0] > 2},
    UNION        => sub {true},
);

GetOptions(
    'count|c'          => \(my $count_only = 0),
    'diff-left|l'      => \$options{DIFF_LEFT},
    'diff-right|r'     => \$options{DIFF_RIGHT},
    'diff-symmetric|s' => \$options{DIFF_SYMM},
    'intersection|i'   => \$options{INTERSECTION},
    'union|u'          => \$options{UNION},
) or die "Unable to process command line options\n";

-t 0 and die "STDIN must be provided (left set)\n";
@ARGV or die "File(s) must be provided (right set)\n";

my %set = map {chomp; $_ => 2} <<>>;

while (defined(my $line = <STDIN>)) {
    chomp $line;
    ++$set{$line};
}

my $operation_name = first {$options{$_}} reverse sort keys %actions;
my $operation      = $actions{$operation_name};

my $count = 0;
foreach my $key (keys %set) {
    if ($operation->($set{$key})) {
        $count_only
            ? ++$count
            : say {*STDOUT} $key;
    }
}

say $count if $count_only;

__END__
