#!/usr/bin/env -S just --one --justfile

# https://just.systems/man/en/

xh := require('xh') # https://github.com/ducaale/xh#installation

# generic http request using full url, provides diagnostics on failure
[private, no-cd]
[group('http')]
generic-http-request method url *argv:
    #!/usr/bin/env -S bash -Eeuo pipefail

    xh_args=(
        '{{url}}'
        --https
        --ignore-stdin
        --no-follow
    )

    method='{{method}}'
    cmd=(xh "${method@U}" "${xh_args[@]}" {{argv}})
    [[ -t 1 ]] && exec "${cmd[@]}"

    if [[ "${method@U}" == 'HEAD' || "${method@U}" == 'OPTIONS' ]]; then
        args=(-qq --print=h)
    else
        args=(-qq --print=b)
    fi

    if res=$("${cmd[@]}" "${args[@]}"); then
        echo "$res"
    else
        errno="$?"
        if [[ -x "$(command -v args2log)" ]]; then
            >&2 args2log "${cmd[@]}"
        else
            >&2 echo "${cmd[@]@Q}"
        fi
        >&2 "${cmd[@]}" --print=HB --offline
        >&2 echo "$res"
        exit "$errno"
    fi

# => helpers ------------------------------------------------------------------------------------------------------ {{{1

[group('helpers')]
[private, no-cd]
@fatal message:
    >&2 echo '{{style("error")}}{{message}}{{NORMAL}}'
    exit 1

[group('helpers')]
[private, no-cd]
@print message:
    [[ -t 1 ]] && >&2 echo '{{style("warning")}}{{message}}{{NORMAL}}' || true
