#!/usr/bin/env bash
# shellcheck disable=SC2016,SC2154

set -Eeuo pipefail

[[ -x "$(command -v argc)" ]] || {
    echo "'argc' helper command is required, install from https://github.com/sigoden/argc" >&2
    exit 2
}

# @describe regex REPL. Quickly check regex
#
# SYNOPSIS:
#     cat 'some input' | jq-repl -q '.'

# üÑØ 2025 Andrew Grechkin
# LICENSE:
#     GPL-2.0-or-later

# @meta version 1.0.0
# @meta combine-shorts
# @meta require-tools fzf,jq

# @arg    command*        File to process (or STDIN if not provided)
# @option -q --query=.    Query

eval "$(argc --argc-eval "$0" "$@")"

# => -------------------------------------------------------------------------------------------------------------- {{{1

if [[ -z "${argc__positionals[*]}" ]] || [[ "${argc__positionals[0]}" == "-" ]]; then
    input="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}")"
    trap 'rm -f "$input"' EXIT
    cat /dev/stdin > "$input"
else
    input="${argc__positionals[0]}"
fi

script='BEGIN {$q = shift} use English; if (m/$q/p) {say ${^MATCH}}'
reload="perl -nE ${script@Q} {q} < '$input'"

fzf_args=(
    --ansi
    --bind="alt-p:unbind(alt-p)"
    --bind="change:reload:$reload"
    --bind="ctrl-c:become(echo -n {q} | clipcopy; true)"
    --bind="ctrl-m:execute($reload | ${PAGER:-less})"
    --bind="ctrl-x:become(echo regex: {q}; $reload)"
    --bind="ctrl-y:execute-silent(echo -n {q} | clipcopy)"
    --bind="esc:execute-silent(echo -n {q} | clipcopy)+change-query(${argc_query})"
    --bind="start:change-query(${argc_query})"
    --disabled
    --footer='C-c:exit C-x:dump C-y:yank enter:view esc:reset'
    --preview-window='hidden'
    --print-query
    --prompt='regex > '
    --query='‚Åâ'
    --scroll-off=4
    --tabstop=4
)

export SHELL="$BASH" # enforce bash for all fzf sub shells
fzf "${fzf_args[@]}"
