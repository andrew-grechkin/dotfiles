#!/usr/bin/env bash
# shellcheck disable=SC2154

set -Eeuo pipefail

[[ -x "$(command -v argc)" ]] || {
    echo "'argc' helper command is required, install from https://github.com/sigoden/argc" >&2
    exit 2
}

# @describe jq REPL. Quickly build filtering request with preview
#
# SYNOPSIS:
#     curl -Ls 'https://jsonplaceholder.typicode.com/users' | jq-repl -q 'map({position: .address.geo, email})'

# üÑØ 2025 Andrew Grechkin
# LICENSE:
#     GPL-2.0-or-later

# @meta version 1.0.0
# @meta combine-shorts
# @meta require-tools fzf,jq

# @arg    command*        File to process (or STDIN if not provided)
# @flag   -R --raw-input  Raw input
# @flag   -r --raw-output Raw output
# @option -q --query=.    Query

eval "$(argc --argc-eval "$0" "$@")"

# => -------------------------------------------------------------------------------------------------------------- {{{1

if [[ -z "${argc__positionals[*]}" ]] || [[ "${argc__positionals[0]}" == "-" ]]; then
    input="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}")"
    trap 'rm -f "$input"' EXIT
    cat /dev/stdin > "$input"
else
    input="${argc__positionals[0]}"
fi

rawi=''
rawo=''
[[ -n "${argc_raw_input:-}" ]]  && rawi='Rn'
[[ -n "${argc_raw_output:-}" ]] && rawi='r'

if [[ -x "$(command -v json-pretty)" ]]; then
    prettify=(json-pretty --no-filename --color=always)
else
    prettify=(jq --indent 2 -SC)
fi

reload="{ jq -c$rawi {q} '$input' || jq -c$rawi . '$input'; } | ${prettify[*]}"

fzf_args=(
    --ansi
    --bind="alt-i:execute(${prettify[*]} < '$input' | ${PAGER:-less})"
    --bind="alt-p:unbind(alt-p)"
    --bind="alt-y:execute-silent(jq -c$rawi$rawo {q} '$input' | clipcopy)"
    --bind="change:reload:$reload"
    --bind="ctrl-c:become(echo -n {q} | clipcopy; true)"
    --bind="ctrl-m:execute(jq -c$rawi$rawo {q} '$input' | ${prettify[*]} | less)"
    --bind="ctrl-x:become(q={q}; echo -n jq -c$rawo \"\${q@Q}\" | tee >(clipcopy) >&2; echo >&2; jq -c$rawo {q} '$input')"
    --bind="ctrl-y:execute-silent(echo -n {q} | clipcopy)"
    --bind="esc:execute-silent(echo -n {q} | clipcopy)+change-query(${argc_query})"
    --bind="start:change-query(${argc_query})"
    --disabled
    --footer='A-i:input A-y:yank C-c:exit C-x:dump C-y:yank enter:view esc:reset'
    --preview-window='hidden'
    --print-query
    --prompt='jq > '
    --query='‚Åâ'
    --scroll-off=4
    --tabstop=4
)

export SHELL="$BASH" # enforce bash for all fzf sub shells
# exec would prevent trap from execution
fzf "${fzf_args[@]}"
