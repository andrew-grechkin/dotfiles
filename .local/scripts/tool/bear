#!/usr/bin/env bash

set -Eeuo pipefail

function fatal() {
    echo "fatal: $*" >&2; exit 1
}

domain="boo""king"
current_script="$(basename "$0")"
if [[ "$current_script" =~ -gitlab$ ]]; then
    url="https://${GL_HOST:-gitlab.com}"
elif [[ "$current_script" =~ -github$ ]]; then
    url="https://${GH_HOST:-github.com}"
elif [[ "$current_script" =~ -iam$ ]]; then
    url="https://sso.prod.$domain.com"
elif [[ "$current_script" =~ -jfrog$ ]]; then
    url="https://jfrog.$domain.com"
elif [[ "$current_script" =~ -vault$ ]]; then
    url="$VAULT_ADDR"
else
    url="$1"
    shift
fi

verbose=0
if [[ "${1:-}" == "--verbose" ]]; then
    verbose=1
    shift
fi

credentials="$(cred "$url")"

if [[ $verbose -eq 1 ]]; then
    echo "$credentials"
fi >&2

password="$(echo "$credentials" | grep -Pom1 '^password=\K.+' 2>/dev/null || true)"
[[ -n "$password" ]] || fatal 'failed to retrieve access token'

iam='x-booking-iam-access-token'
# TODO: reduce amount of work
argv=()
for arg in "$@"; do
    if [[ "$arg" =~ % ]]; then
        arg="${arg//%BEARER%/Bearer $password}"
        arg="${arg//%BEAR_HEADER%/authorization:Bearer $password}"
        arg="${arg//%IAM_HEADER%/$iam:$password}"
        arg="${arg//%ACCESS_TOKEN%/$password}"
        arg="${arg//%URL%/$url}"
    fi
    argv+=("$arg")
done

exec "${argv[@]}"
