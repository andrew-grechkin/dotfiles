#!/usr/bin/env -S just --one --justfile

# ABSTRACT: different operations over markdown files

# https://just.systems/man/en/

export this := justfile()

# => default ------------------------------------------------------------------------------------------------------ {{{1

[private]
@default:
    '{{this}}' --list

# => render ------------------------------------------------------------------------------------------------------- {{{1

# pre-process markdown with knit
[no-cd]
[group('render')]
pre-process-knit workdir:
    #!/usr/bin/env -S bash -Eeuo pipefail

    args=(
        -w /data
        'docker.io/rocker/verse'
        '/usr/local/lib/R/site-library/knitr/bin/knit'
        -n /data/result.md
        -o /data/knit.md
    )
    "$this" docker-run "{{workdir}}" "${args[@]}" && mv -f "{{workdir}}/knit.md" "{{workdir}}/result.md"

# pre-process markdown with mermaid diagrams
[no-cd]
[group('render')]
pre-process-mermaid workdir:
    #!/usr/bin/env -S bash -Eeuo pipefail

    args=(
        'docker.io/minlag/mermaid-cli'
        -q -b transparent
        -i "/data/result.md"
        -o "/data/mermaid.md"
    )
    "$this" docker-run "{{workdir}}" "${args[@]}" && mv -f "{{workdir}}/mermaid.md" "{{workdir}}/result.md"

# render markdown to PDF
[no-cd]
[group('render')]
render file:
    #!/usr/bin/env -S bash -Eeuo pipefail

    umask 0
    workdir="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}" -d --suffix '.md2pdf')"
    trap 'rm -rf "$workdir"' EXIT
    chmod a+rwX,g+s "$workdir"
    mkdir -p "$workdir/.cache"

    cp -f '{{file}}' "$workdir/result.md" && chmod a+r "$workdir/result.md"
    ln -s '/dev/stdout' "$workdir/stdout.pdf"

    grep -P '[`]{3}[{]r'    "$workdir/result.md" &>/dev/null && '{{this}}' pre-process-knit "$workdir"
    grep -P '[`]{3}mermaid' "$workdir/result.md" &>/dev/null && '{{this}}' pre-process-mermaid "$workdir"

    if grep -P 'output:\s+beamer_presentation' "$workdir/result.md" &>/dev/null; then
        args=(-t beamer)
    else
        args=(-t pdf)
    fi
    "$this" docker-run "$workdir" docker.io/pandoc/latex:latest-ubuntu -f markdown+smart -o /data/stdout.pdf /data/result.md "${args[@]}"

# show markdown as PDF in zathura
[no-cd]
[group('render')]
show file:
    #!/usr/bin/env -S bash -Eeuo pipefail

    if grep -P 'output:\s+beamer_presentation' "{{file}}" &>/dev/null; then
        args=(--mode=presentation)
    fi
    "$this" render '{{file}}' | zathura - "${args[@]}"

# => docker ------------------------------------------------------------------------------------------------------- {{{1

# generic docker run
[private, no-cd]
[group('docker')]
docker-run vol +args:
    #!/usr/bin/env -S bash -Eeuo pipefail
    docker run --rm -v '{{vol}}:/data' {{args}}

# => helpers ------------------------------------------------------------------------------------------------------ {{{1

[group('helpers')]
[private]
@fatal message:
    >&2 echo '{{style("error")}}{{message}}{{NORMAL}}'
    exit 1

[group('helpers')]
[private]
@print message:
    [[ -t 1 ]] && >&2 echo '{{style("warning")}}{{message}}{{NORMAL}}' || true
