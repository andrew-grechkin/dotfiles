#!/usr/bin/env -S jq -r --null-input --from-file

# convert JSON array or stream of hashes to TSV with the header based on the pathes of the first hash

# get all paths to all leafs but not array elements (not sure if there is a better way)
def to_paths:    . as $hash
    | [paths(true)]
    | map(. as $p | {p: $p, t: $hash | getpath($p) | type})
    | map(select((.t == "array" or .t == "null" or .t == "boolean" or.t == "number" or.t == "string") and (.p | map(select(numbers)) | length == 0)))
    | map(.p);

{"array": 1, "object": 1} as $need_encode
| def to_tsv($keys; $paths):
    [getpath($paths | .[])]
    | map(if type | in($need_encode) then @json else . end)
    | @tsv;

input | . as $first

| if type == "array" then
    ($first[0] | to_paths) as $paths
    | ($paths | map(join("."))) as $keys
    | ($keys | @tsv)
    , ($first[] | to_tsv($keys; $paths))
elif type == "object" then
    ($first | to_paths) as $paths
    | ($paths | map(join("."))) as $keys
    | ($keys | @tsv)
    , ($first | to_tsv($keys; $paths))
    , (inputs | to_tsv($keys; $paths))
end
