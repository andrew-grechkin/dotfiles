#!/usr/bin/env bash

set -Eeuo pipefail

args=$(getopt --name="$0" --options 'jh:p:' --longoptions 'json,host:,project:' -- "$@")
eval set -- "$args"

while ((1)); do
	case "$1" in
		-h | --host) GL_HOST="$2"; shift 2 ;;
		-j | --json) json='1'; shift ;;
		-p | --project) GL_PROJECT="$2"; shift 2 ;;
		--) shift; break ;;
	esac
done

source "$HOME/.local/lib/shell/gitlab.bash"
gl-redefine-vars

if [[ -n "${json:-}" ]]; then
	gl-approvals-get "$GL_PROJECT" "$1"
else
	source "$HOME/.local/lib/shell/color.bash"
	source "$HOME/.local/lib/shell/data-processing.bash"

	fetcher=("$0" "${pt_args[@]}")
	export FZF_RELOAD_CMD="${fetcher[*]@Q}"

	"${fetcher[@]}" "$@" -j | {
		# reset sequence sgr0 for tmux-256color adds ^O at the end (^O is shift-in, switch to non-graphic character set)
		# less prints ^O by default even when -R arg is passed and this makes output ugly
		# this is most probably a bug in less itself because with -r flag less is not printing ^O symbols,
		# but unfortunatelly -r flag is unusable because it breaks text formatting (colums)
		# so there are 3 ways of solving this issue:
		# * process all ouptut with `sed 's/\x0f//g'` before passing it to less
		# * use terminal which doesn't add ^O as a part of reset sequence (xterm)
		# * use hardcoded reset (might be not portable but who cares)
		# TERM=xterm
		jq_fields=(
			"id;${FG[olive]}\(.user.id)${FX[reset]}"
			"uname;\(.user.username)"
			"name;${FG[blue]}\(.user.name)${FX[reset]}"
			"url;${FG[cyan]}\(.user.web_url)${FX[reset]}"
		)

		jq '.approved_by' | json-array-to-tsv "sort_by(.iid) | reverse" "${jq_fields[@]}"
	}
fi
