#!/usr/bin/env bash

set -Eeuo pipefail

args="$(getopt --name="$0" --options 'jh:p:' --longoptions 'json,host:,project:' -- "$@")"
eval set -- "$args"

# shellcheck disable=SC2078
while [ : ]; do
	case "$1" in
		-h | --host) HOST="$2"; shift 2 ;;
		-j | --json) json='1'; shift ;;
		-p | --project) PROJECT="$2"; shift 2 ;;
		--) shift; break ;;
	esac
done

source "$HOME/.local/lib/shell/data-processing.bash"
source "$HOME/.local/lib/shell/gitlab.bash"

fetcher=("$0" "${pt_args[@]}")
export FZF_RELOAD_CMD="${fetcher[*]@Q}"

if [[ -n "${json:-}" ]]; then
	# https://docs.gitlab.com/ee/api/merge_request_approvals.html#merge-request-level-mr-approvals
	http_fetch_command=(
		xhs
		"$HOST/$API/projects/$(url_encode "$PROJECT")/merge_requests/$1/approvals"
		"${COMMON_XH_OPTIONS[@]}"
	)
	exec "${http_fetch_command[@]}"
else
	"${fetcher[@]}" "$@" -j | {
		# reset sequence sgr0 for tmux-256color adds ^O at the end (^O is shift-in, switch to non-graphic character set)
		# less prints ^O by default even when -R arg is passed and this makes output ugly
		# this is most probably a bug in less itself because with -r flag less is not printing ^O symbols,
		# but unfortunatelly -r flag is unusable because it breaks text formatting (colums)
		# so there are 3 ways of solving this issue:
		# * process all ouptut with `sed 's/\x0f//g'` before passing it to less
		# * use terminal which doesn't add ^O as a part of reset sequence (xterm)
		# * use hardcoded ansi_reset (might be not portable but who cares)
		# TERM=xterm
		jq_fields=(
			"id;$(tput setaf 3)\(.user.id)$ansi_reset"
			"uname;\(.user.username)"
			"name;$(tput setaf 12)\(.user.name)$ansi_reset"
			"url;$(tput setaf 14)\(.user.web_url)$ansi_reset"
		)

		jq '.approved_by' | json-array-to-tsv "sort_by(.iid) | reverse" "${jq_fields[@]}"
	}
fi
