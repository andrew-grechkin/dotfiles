#!/usr/bin/env bash

set -Eeuo pipefail

args="$(getopt --name="$0" --options 'ft:' --longoptions 'focus,timeout:' -- "$@")"
eval set -- "$args"

timeout='0'

# shellcheck disable=SC2078
while [ : ]; do
	case "$1" in
		-f | --focus) focus='1'; shift ;;
		-t | --timeout) timeout="$2"; shift 2 ;;
		--) shift; break ;;
	esac
done

if [[ -z "${TMUX:-}" ]]; then
	"$@"
else
	if [[ -n "${FZF_PORT:-}" && -n "${FZF_RELOAD_CMD:-}" ]]; then
		reload="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}")"
		printf "reload(%s)\n" "$FZF_RELOAD_CMD" >"$reload"
		header=$(cat <<-EO_HEADER
			function footer() {
				if [[ "\$1" == "0" ]]; then
					sleep 1
					xh :${FZF_PORT:-} "@$reload"
					sleep $timeout
				else
                    echo "Script exitcode: \$(errno \$1)"
					echo "Press Enter to continue"
					read -n 1 -s -r -p
				fi
				rm -f "$reload"
			}
			trap 'footer \$?' EXIT
		EO_HEADER
		)
	else
		header=$(cat <<-EO_HEADER
		function footer() {
			if [[ "\$1" == "0" ]]; then
				sleep $timeout
			else
				echo "script exitcode: \$1"
				printf "%s " "Press enter to continue"
				read -n 1 -s -r -p
			fi
		}
		trap 'footer \$?' EXIT
		EO_HEADER
		)
	fi

	if [[ -n "$*" ]]; then
		cmd=$(
			echo "$header";
			echo "${@@Q}"
		)
	else
		cmd=$(
			echo "$header";
			cat < /dev/stdin
		)
	fi

	tmux_args=(-v)
	[[ -z "$focus" ]] && tmux_args+=(-d)

	tmux split-window "${tmux_args[@]}" "$cmd"
fi
