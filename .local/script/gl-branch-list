#!/usr/bin/env bash

set -Eeuo pipefail

[[ -x "$(command -v jq)" ]] || {
	echo "jq is not installed. Please install from 'https://jqlang.github.io/jq/download/'"
	exit 1
}

if [[ -t 1 ]]; then
	[[ -x "$(command -v fzf)" ]] || {
		echo "fzf is not installed. Please install from 'https://github.com/junegunn/fzf#installation'"
		exit 1
	}

	table='1'
else
	table='0'
fi

args="$(getopt --name="$0" --options 'th:p:' --longoptions 'table,host:,project:' -- "$@")"
eval set -- "$args"
args=("$@")

# shellcheck disable=SC2078
while [ : ]; do
	case "$1" in
		-h | --host) HOST="$2"; shift 2 ;;
		-p | --project) PROJECT="$2"; shift 2 ;;
		-t | --table) table='1'; shift ;;
		--) shift; break ;;
	esac
done

source "$(dirname "$0")/_gl-common"

if [[ -t 1 ]]; then
	if [[ -x "$(command -v delta)" ]]; then
		prettify_diff=('|' delta --paging=always)
	else
		prettify_diff=()
	fi

	fetcher=(
		"$0"
		--table
		"${args[@]}"
	)

	fzf_cmd=(
		fzf
		--ansi
		# --bind="alt-a:reload-sync( (set -x; exec &>/tmp/git-approve.log; gl-mr-approve -h '$HOST' -p '$PROJECT' {+1}); ${fetcher[*]@Q})"
		--bind="alt-b:execute-silent(python3 -mwebbrowser {-1})"
		# --bind="alt-m:reload-sync( (set -x; exec &>/tmp/git-merge.log; gl-mr-merge -h '$HOST' -p '$PROJECT' {+1}); ${fetcher[*]@Q})"
		--bind="alt-p:toggle-preview,ctrl-alt-w:toggle-preview-wrap,ctrl-s:toggle-sort"
		--bind="alt-r:reload-sync(gl-branch-delete -h '$HOST' -p '$PROJECT' {+1} &>/dev/null; ${fetcher[*]@Q})"
		--bind="ctrl-m:execute(gl-branch-diff {1} ${prettify_diff[*]})"
		--bind="ctrl-r:reload-sync(${fetcher[*]@Q})"
		--bind="ctrl-x:become(echo -n {+1} | tee >(clipcopy); echo)"
		--bind="ctrl-y:execute-silent(echo -n {} | clipcopy)"
		--bind="esc:cancel"
		--bind="home:top"
		--bind="tab:toggle+down,shift-tab:toggle+up"
		--delimiter="\t"
		--header-lines=1
		--header="A-b:browse A-p:preview A-r:remove C-r:reload C-y:yank Enter:diff"
		--multi
		# --no-sort
		--preview-window=right:60%:border-left:wrap:hidden
		--preview="gl-branch-diff {1} ${prettify_diff[*]:0:2}"
		--prompt="$PROJECT > "
		--reverse
		# --scheme=history
		--scroll-off=4
		--tabstop=4
		--track
	)

	"${fetcher[@]}" | "${fzf_cmd[@]}"
else
	# https://docs.gitlab.com/ee/api/branches.html#list-repository-branches

	if [[ -x "$(command -v xhs)" ]]; then
		http_fetch_command=(
			xhs
			"${HOST}/$API/projects/$(url_encode "$PROJECT")/repository/branches"
			"${COMMON_XH_OPTIONS[@]}"
		)
	else
		http_fetch_command=(
			curl
			"https://${HOST}/$API/projects/$(url_encode "$PROJECT")/repository/branches"
			"${COMMON_CURL_OPTIONS[@]}"
		)
	fi

	if [[ "$table" == "1" ]]; then
		jq_fields=(
			"name;$(tput setaf 3)\(.name)$(tput sgr0)"
			"updated;$(tput setaf 2)\(.commit.committed_date[0:10])$(tput sgr0)"
			'merged;\(if .merged then 1 else 0 end)'
			'default;\(if .default then 1 else 0 end)'
			'protected;\(if .protected then 1 else 0 end)'
			"author;$(tput setaf 13)\(.commit.author_name)$(tput sgr0)"
			"title;$(tput setaf 7)\(.commit.title)$(tput sgr0)"
			"url;$(tput setaf 14)\(.web_url)$(tput sgr0)"
		)

		"${http_fetch_command[@]}" | json-array-to-tsv ".commit.committed_date" "${jq_fields[@]}"
	else
		"${http_fetch_command[@]}"
	fi
fi
