#!/usr/bin/env bash

set -Eeuo pipefail

# idea from https://github.com/ThePrimeagen/.dotfiles/blob/master/bin/.local/scripts/tmux-sessionizer

ROOT1="$HOME/git"
ROOT2="/usr/local/git_tree"

SELECTED=$(
	cat                                                                       \
		<(                                                                    \
			fd -HuL -E 'bazel-*' -td -tf '\A.git\z' -d 4 "$ROOT1" 2>/dev/null \
			| perl -plE "s{^$ROOT1/(.*)}{$ROOT1\t\1}x"                      \
		)                                                                     \
		<(                                                                    \
			fd -HuL -E 'bazel-*' -td -tf '\A.git\z' -d 2 "$ROOT2" 2>/dev/null \
			| perl -plE "s{^$ROOT2/(.*)}{$ROOT2\t\1}x"                      \
		)                                                                     \
		| perl -plE "s{\/\.git\/?(?=$|\s)}{}g"                                \
		| sort -u                                                             \
		| fzf
)

if [[ -z $SELECTED ]]; then
	exit 0
fi

IFS='	' read -r -a PARTS <<< "$SELECTED"

FULL_PATH="${PARTS[0]}/${PARTS[1]}"
SELECTED_NAME=$(echo "${PARTS[1]}" | tr . _)

if [[ -z $TMUX ]] && [[ -z "$(pgrep tmux 2>/dev/null)" ]]; then
	tmux new-session -s "$SELECTED_NAME" -c "$FULL_PATH"
	exit 0
fi

# has-session seems broken because it matches the beginning of the name, so sessions with similar names but different
# suffixes are false positively detected as existing
# if ! tmux has-session -t "$SELECTED_NAME" &>/dev/null; then
if ! tmux list-sessions | grep -P "${SELECTED_NAME}:" &>/dev/null; then
	tmux new-session -ds "$SELECTED_NAME" -c "$FULL_PATH"
fi

tmux switch-client -t "$SELECTED_NAME"
