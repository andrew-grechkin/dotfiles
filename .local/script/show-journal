#!/usr/bin/env bash

set -Eeuo pipefail

## journalctl wrapper with nice output format and colors based on log event severity.
## The order is for human consumption only so they are just based on RFC 5424 (without being compliant) and the default journalctl short-iso format.
## The syslog severity is added. This one is missing in all common log formats or not human readable (RFC 5424).
## The time format is based on systemd.time(7) and RFC 3339.
## The colors are made up by ypid because I could not find a proper standard.
## Ref: https://serverfault.com/questions/59262/bash-print-stderr-in-red-color/502019#502019
## Ref: https://serverfault.com/questions/801514/systemd-default-log-output-format

# shellcheck disable=SC2016
# command journalctl "$@" -o json \
	# | jq --unbuffered --raw-output '"echo \(.PRIORITY|tonumber|@sh) \"$(date --date @\((._SOURCE_REALTIME_TIMESTAMP // .__REALTIME_TIMESTAMP) |tonumber | ./ 1000000 | tostring) '\''+%F %T %Z'\'')\" \(._HOSTNAME|@sh) \(.SYSLOG_IDENTIFIER|@sh): \(.MESSAGE | gsub("\n"; "\n    ") | @sh) "' \
	# | sh \
	# | perl -e 'my $c_to_sev = {0 => "48;5;9", 1 => "48;5;5", 2 => "38;5;9", 3 => "38;5;1", 4 => "38;5;5", 5 => "38;5;2", 6 => "38;5;2"}; while (<<>>) { s#^(([0-6])(?: [^ ]+){5})(.*)#\e[$c_to_sev->{$2}m$1\e[m$3#; print; }'
command journalctl "$@" -o json \
	| perl -WE '
use open ":locale";
use strict;
use utf8;

use JSON::PP;
use POSIX qw(strftime);

my $c_to_sev = {
	0 => "48;5;9",
	1 => "48;5;5",
	2 => "38;5;9",
	3 => "38;5;1",
	4 => "38;5;5",
	5 => "38;5;2",
	6 => "38;5;2",
	7 => "38;5;2",
};

my $json = JSON::PP->new->canonical->utf8(0)->pretty->space_before(0);

while (defined (my $j = <<>>)) {
	chomp($j);
	next unless $j;

	my $data = $json->decode($j);
	my $date = $data->{_SOURCE_REALTIME_TIMESTAMP} // $data->{__REALTIME_TIMESTAMP};

	$data->{PRIORITY} //= 0;

	say sprintf(
		"\e[$c_to_sev->{$data->{PRIORITY}}m%s:\e[m %s %s %s",
		strftime("%FT%T%z", localtime($date / 1000000)), $data->{_HOSTNAME} // "undefined", $data->{SYSLOG_IDENTIFIER} // "undefined", $data->{MESSAGE} // "undefined",
	);
}
'
