#!/usr/bin/env bash

set -Eeuo pipefail

[[ -x "$(command -v argc)" ]] || {
    echo "'argc' helper command is required, install from https://github.com/sigoden/argc" >&2
    exit 2
}

# @describe Amend commit wrapper with extended functionality

# @meta version 1.0.0
# @meta combine-shorts
# @meta require-tools mktemp

# @flag   -A --reset-author                   Reset author to self
# @flag   -a --keep-author-date               Keep author date
# @flag   -d --keep-dates                     Keep both author and commit dates
# @flag   -M --message-generate               Generate message via AI
# @option -D --dates-from                     Copy dates from a reference

eval "$(argc --argc-eval "$0" "$@")"

args=()

if [[ -n "${argc_reset_author:=}" ]]; then
    args+=(--reset-author)
fi

if [[ -n "${argc_message_generate:=}" ]]; then
    message="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}")"
    trap 'rm -f "$message"' EXIT
fi

if [[ -n "${argc_keep_dates:=}" || -n "${argc_dates_from:-}" || -n "${argc_keep_author_date:-}" ]]; then
    if [[ -n "${argc_dates_from:=}" ]]; then
        reference="$argc_dates_from"
    else
        if [[ -s '.git/rebase-merge/rewritten-list' && -s '.git/rebase-merge/done' ]]; then
            # read -r <<< "$(tail -n1 '.git/rebase-merge/rewritten-list')" _source result
            # use sha of the last picked commit
            reference="$(tac '.git/rebase-merge/done' | grep -Pom1 '^pick \K[[:xdigit:]]{40,}')"
        else
            reference="HEAD"
        fi
    fi

    GIT_AUTHOR_DATE="$(git author-date "$reference")"
    echo "Restoring author date for: $GIT_AUTHOR_DATE ($reference)" >&2
    export GIT_AUTHOR_DATE
    # enforce author date via --date param
    # GIT_AUTHOR_DATE variable is sufficient only if author is being reset
    args+=(--date="$GIT_AUTHOR_DATE")

    if [[ -n "$argc_keep_dates" || -n "$argc_dates_from" ]]; then
        GIT_COMMITTER_DATE="$(git commit-date "$reference")"
        echo "Restoring commit date for: $GIT_COMMITTER_DATE ($reference)" >&2
        export GIT_COMMITTER_DATE
    fi
fi

if [[ -n "$argc_message_generate" && ! -s "$message" ]]; then
    ai-suggest-commit-msg HEAD > "$message"
    args+=(-F "$message")
fi

# shellcheck disable=SC2154
git commit --amend --allow-empty -nq "${args[@]}" "${argc__positionals[@]}"
