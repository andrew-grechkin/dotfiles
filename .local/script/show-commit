#!/usr/bin/env bash

set -Eeo pipefail

# shellcheck disable=SC2002
if [[ -t 1 ]]; then
	if [[ -x "$(command -v delta)" ]]; then
		GIT_PAGER=("delta")
	else
		GIT_PAGER=("$(git config core.pager)")
	fi
else
	GIT_PAGER=("cat")
fi

git-in-repo && {
	if [[ -n "$*" ]]; then
		REF="$1"
		shift
	else
		REF="HEAD"
	fi

	# check the REF
	git rev-parse --verify "$REF" &>/dev/null || return

	SHOW_OPTIONS=(--color=always --ignore-all-space --stat)

	if [[ -n "$(git rev-parse --verify "$REF^2" 2>/dev/null)" ]]; then
		# is a merge commit

		echo 'Merged commits:'
		git --no-pager log --color=always --oneline --stat "$REF"^1.."$REF"^2
		echo
		git --no-pager show "${SHOW_OPTIONS[@]}" --pretty=fuller --dd --minimal --patch "$REF" "$@"

		echo
		SHOW_OPTIONS+=(--first-parent)
		SPAN="$REF^1..$REF^2"
	else
		if git gmr &>/dev/null; then
			# # has remote
			# COMMIT="$(git rev-parse "$REF" 2>/dev/null)"
			# MAIN_UPSTREAM_BRANCH="$(git gmu 2>/dev/null)"
			# MAIN_UPSTREAM_COMMIT="$(git rev-parse "$MAIN_UPSTREAM_BRANCH" 2>/dev/null)"
			# if [[ "$MAIN_UPSTREAM_COMMIT" = "$COMMIT" ]]; then
			# 	SPAN="$REF"
			# elif git merge-base --is-ancestor "$REF" "$MAIN_UPSTREAM_BRANCH"; then
			# 	SPAN="$REF"
			# else
			# 	# SPAN="$MAIN_UPSTREAM_BRANCH..$REF"
			# 	COMMITS="$(git --no-pager log --color=always --oneline "$MAIN_UPSTREAM_BRANCH..$REF")"
			# 	if (( $(echo "$COMMITS" | wc -l) > 1 )); then
			# 		echo "Combined diff for commits:"
			# 		echo "$COMMITS"
			# 		git --no-pager diff --pretty=fuller --merge-base "$MAIN_UPSTREAM_BRANCH" "$REF" "$@"
			# 		echo
			# 	fi
			SPAN="$REF"
			# fi
		else
			SPAN="$REF"
		fi

		git --no-pager show --patch --pretty=fuller "${SHOW_OPTIONS[@]}" "$SPAN" "$@"
	fi
} 2>/dev/null | "${GIT_PAGER[@]}"
