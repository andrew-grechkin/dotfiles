#!/usr/bin/env perl

# ABSTRACT: Simple HTTP server to echo every incoming request to STDOUT as a JSON

use v5.40;
use autodie;
use open ':locale';
use utf8;
use warnings     qw(FATAL utf8);
use experimental qw(class declared_refs defer refaliasing);

# this is accessed at compile time so it must be in begin block
BEGIN {
    ## no critic [Variables::RequireLocalizedPunctuationVars]
    # $ENV{MOJO_EVENTEMITTER_DEBUG} = 1;
    $ENV{MOJO_LOG_LEVEL} = 'error';
}

use English      qw(-no_match_vars);
use Getopt::Long qw(:config auto_version bundling no_ignore_case);

use Mojo::JSON           qw(encode_json);
use Mojo::Server::Daemon qw();

use constant {'DEFAULT_PORT' => 3456};

# => -------------------------------------------------------------------------------------------------------------- {{{1

local $OUTPUT_AUTOFLUSH = 1;

my $repeat = $ENV{'HTTP_ECHO_REPEAT'} // 0;
my $port   = $ENV{'HTTP_ECHO_PORT'}   // DEFAULT_PORT();

GetOptions(
    'port|p=s' => \$port,                                                      # listening port
    'repeat|r' => \$repeat,                                                    # continue listening after first request processed
) or die "Unable to process command line options\n";

# => -------------------------------------------------------------------------------------------------------------- {{{1

sub main() {
    my $daemon = Mojo::Server::Daemon->new(listen => ["http://*:$port"], silent => 1);

    $daemon->unsubscribe('request')->on(
        request => sub ($daemon, $tx) {
            $tx->on(
                finish => sub ($tx) {
                    unless ($repeat) {
                        $daemon->stop;
                        $daemon->ioloop->stop;
                    }
                },
            );

            my $req = $tx->req;

            my $data = {
                body    => $req->json || $req->body_params->to_hash,
                headers => $req->headers->to_hash,
                method  => $req->method,
                path    => $req->url->path->to_string,
                query   => $req->url->query->to_hash,
            };

            my $body = encode_json($data);

            say {*STDOUT} $body;

            # Response
            $tx->res->code(200);
            $tx->res->headers->content_type('application/json');
            $tx->res->body($body);

            # Resume transaction
            $tx->resume;
        },
    );

    say {*STDERR} "Web application available at http://127.0.0.1:$port";
    $daemon->run;

    return 0;
}

exit main();

__END__
