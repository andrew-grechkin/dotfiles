#!/usr/bin/env bash

set -Eeuo pipefail

[[ -x "$(command -v jq)" ]] || {
	echo "jq is not installed. Please install from 'https://jqlang.github.io/jq/download/'"
	exit 1
}

formatter='| jq --indent 2 -S'
colorizer=''
color='auto'
filename=''

args="$(getopt --name="$0" --options 'nc:f:C' --longoptions 'no-filename,color:,file-name:' -- "$@")"
eval set -- "$args"

# shellcheck disable=SC2078
while [ : ]; do
	case "$1" in
		-c | --color) color="$2"; shift 2 ;;
		-f | --file-name) filename="$2"; shift 2 ;;
		-n | --no-filename) no_filename="1"; shift ;;
		-C) color="always"; shift ;;
		--) shift; break ;;
	esac
done

if [[ -t 1 || "$color" == 'always' ]]; then
	if [[ -x "$(command -v json2yaml)" ]]; then
		formatter="| json2yaml"
		LANGUAGE="yaml"
	elif [[ -x "$(command -v yq)" ]]; then
		formatter="| yq -P -o yaml"
		LANGUAGE="yaml"
	fi

	[[ -x "$(command -v bat)" ]] && {
		if [[ "${no_filename:-}" == "1" ]]; then
			BAT_OPTIONS=(--style=plain)
		else
			if [[ -n "$filename" ]]; then
				BAT_OPTIONS=(--style=header "--file-name=$filename")
			else
				BAT_OPTIONS=(--style=header "--file-name=STDIN.${LANGUAGE:-json}")
			fi
		fi

		colorizer="| bat --wrap=never -l ${LANGUAGE:-json} --color='$color' ${BAT_OPTIONS[*]@Q}"
	}
fi

bash -c "cat $* $formatter ${colorizer:-}"
