#!/usr/bin/env bash

# qemu-system-x86_64 -device usb-host,help

set -Eeuo pipefail

OPTIONS=(
	-drive "file=$1,if=virtio,index=1,media=cdrom"
)

ISO_NAME=$(basename "$1")
ISO_DIR=$(dirname "$1")

QCOW_NAME="${ISO_NAME/.iso/}.uefi.qcow2"
QCOW_PATH="$ISO_DIR/$QCOW_NAME"
[[ -f "$QCOW_PATH" ]] || {
	qemu-img create -f qcow2 "$QCOW_PATH" 128G
}
OPTIONS+=(
	-drive "file=$QCOW_PATH,if=virtio,index=0,media=disk,format=qcow2"
)

USB_NAME="${ISO_NAME/.iso/}.uefi.usb.qcow2"
USB_PATH="$ISO_DIR/$USB_NAME"
[[ -f "$USB_PATH" ]] || {
	qemu-img create -f qcow2 "$USB_PATH" 8G
}
OPTIONS+=(
	-device "qemu-xhci,id=xhci"
	-device "usb-storage,bus=xhci.0,drive=stick"
	-drive "file=$USB_PATH,if=none,id=stick,format=qcow2"
)

CMD=(
	-audiodev "pa,id=snd0"
	-bios /usr/share/ovmf/x64/OVMF.fd
	# -cdrom "$1"
	-cpu host
	-device ich9-intel-hda
	-device "hda-output,audiodev=snd0"
	"${OPTIONS[@]}"
	-display "gtk,zoom-to-fit=on"
	-enable-kvm
	-k en-us
	-m 4G
	-nic "user,model=virtio-net-pci"
	-no-reboot
	# -serial stdio
	-smp 2
	-vga std
	# -virtfs "local,path=$HOME/.cache,mount_tag=host0,security_model=passthrough,id=host0"
)

qemu-system-x86_64 "${CMD[@]}"

# -drive file=$(QCOW2_IMAGE),if=ide,index=0,media=disk,format=qcow2 \
	# qemu-system-x86_64                                                   \
	#     -device virtio-scsi-pci,id=scsi0                                 \
	#     -device "scsi-${mediatype%rom},bus=scsi0.0,drive=${mediatype}0"  \
	#     -drive "id=${mediatype}0,if=none,format=raw,media=${mediatype/hd/disk},read-only=on,file=${image}" \
	#     -device virtio-net-pci,romfile=,netdev=net0 -netdev user,id=net0,hostfwd=tcp::60022-:22 \
	#     -machine type=q35,smm=on,accel=kvm,usb=on,pcspk-audiodev=snd0    \
	#     -global ICH9-LPC.disable_s3=1                                    \
	#     "${qemu_options[@]}"                                             \
	# -display "sdl"                                                   \
