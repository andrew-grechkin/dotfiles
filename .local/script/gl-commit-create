#!/usr/bin/env bash

set -Eeuo pipefail

if [[ -t 0 ]]; then
	args="$(getopt --name="$0" --options 'h:p:a:b:c:f:m:' --longoptions 'host:,project:,action:,branch:,content:,file:,message:' -- "$@")"
	eval set -- "$args"

	action='create'

	# shellcheck disable=SC2078
	while [ : ]; do
		case "$1" in
			-h | --host) HOST="$2"; shift 2 ;;
			-p | --project) PROJECT="$2"; shift 2 ;;
			-a | --action) action="$2"; shift 2 ;;
			-b | --branch) BRANCH="$2"; shift 2 ;;
			-c | --content) content="$2"; shift 2 ;;
			-f | --file) file="$2"; shift 2 ;;
			-m | --message) message="$2"; shift 2 ;;
			--) shift; break ;;
		esac
	done

	# shellcheck disable=SC1090
	source "$(realpath -Ls "$(dirname "$0")/../lib/shell/data-processing.bash")"
	# shellcheck disable=SC1090
	source "$(realpath -Ls "$(dirname "$0")/../lib/shell/gitlab.bash")"

	[[ -z "${BRANCH:-}" ]]  && { echo "branch is required"; exit 1; }
	[[ -z "${message:-}" ]] && { echo "message is required"; exit 1; }
	[[ -z "${file:-}" ]]    && { echo "file is required"; exit 1; }
	[[ -z "${content:-}" ]] && { echo "content is required"; exit 1; }

	# https://docs.gitlab.com/ee/api/commits.html#create-a-commit-with-multiple-files-and-actions

	payload="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}")"
	trap 'rm -f "$payload"' EXIT
	>"$payload" jq -n --arg action "$action" --arg branch "$BRANCH" --rawfile content "$content" --arg file "$file" --arg message "$message" '{
		"branch": $branch,
		"commit_message": $message,
		"actions": [
			{
				"action": $action,
				"file_path": $file,
				"content": $content
			}
		]
	}'
else
	args="$(getopt --name="$0" --options 'h:p:' --longoptions 'host:,project:' -- "$@")"
	eval set -- "$args"

	# shellcheck disable=SC2078
	while [ : ]; do
		case "$1" in
			-h | --host) HOST="$2"; shift 2 ;;
			-p | --project) PROJECT="$2"; shift 2 ;;
			--) shift; break ;;
		esac
	done

	# shellcheck disable=SC1090
	source "$(realpath -Ls "$(dirname "$0")/../lib/shell/data-processing.bash")"
	# shellcheck disable=SC1090
	source "$(realpath -Ls "$(dirname "$0")/../lib/shell/gitlab.bash")"

	payload="$(mktemp --tmpdir="${XDG_RUNTIME_DIR:-/tmp}")"
	trap 'rm -f "$payload"' EXIT
	>"$payload" cat
fi

http_post_command=(
	xhs
	"${HOST}/$API/projects/$(url_encode "$PROJECT")/repository/commits"
	"${COMMON_XH_OPTIONS[@]}"
	@"$payload"
)

"${http_post_command[@]}"
