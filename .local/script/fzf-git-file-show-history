#!/usr/bin/env bash

set -Eeuo pipefail

git-in-repo || exit 95

PTH="${*: -1}"

if [[ -z "$PTH" || "$PTH" == '--' || "$PTH" == "$0" ]]; then
	echo "Provide relative path to file" > /dev/stderr
	exit 1
fi

# if [[ ! -e "$PTH" ]]; then
# 	echo "Path not found: $PTH" > /dev/stderr
# 	exit 2
# fi

GIT_ROOT="$(git root)"
PTH_REL_ROOT=$(realpath -s --relative-to="$GIT_ROOT" "$(realpath "$PTH")")

ARGV=("$@")
ARGV[-1]="$PTH_REL_ROOT"

cd -- "$GIT_ROOT" || exit 1

if [[ -t 1 ]]; then
	COMMAND_EXTRACT_COMMIT="echo {} | grep -o '[[:xdigit:]]\{6,\}' | head -1 | tr -d '\n'"

	HEADER=$(
		cat <<- EOF_HEADER
		History of a file: '${PTH_REL_ROOT}'
		Press A-b: browse, A-d: diff-head, A-p: preview, C-b: blame, C-a: all, C-o: only, C-m/enter: view
		EOF_HEADER
	)

	CMD=(
		fzf
		--ansi
		--no-multi
		--no-sort
		--reverse
		--scheme=history
		--scroll-off=8
		--track
		--bind="ctrl-y:execute-silent(${COMMAND_EXTRACT_COMMIT} | clipcopy)"
		--header-first
		--header="$HEADER"
	)

	CMD+=(
		--bind="alt-b:execute-silent(git browse \"\$($COMMAND_EXTRACT_COMMIT)\" -- \"$PTH\")"
		--bind="alt-d:execute(git diff \"\$($COMMAND_EXTRACT_COMMIT)\" HEAD -- \"$PTH_REL_ROOT\" | delta --paging=always)"
		--bind="ctrl-a:execute(show-commit \$(${COMMAND_EXTRACT_COMMIT}) --show-signature | delta --paging=always)"
		--bind="ctrl-o:execute(show-commit \$(${COMMAND_EXTRACT_COMMIT}) --show-signature -- \"$PTH_REL_ROOT\" | delta --paging=always)"
		--bind="ctrl-b:execute(git blame -M -w \"\$(${COMMAND_EXTRACT_COMMIT})\" \"$PTH_REL_ROOT\" | delta --paging=always)"
		--bind="ctrl-m:execute(git show \"\$(${COMMAND_EXTRACT_COMMIT}):$PTH_REL_ROOT\" | bat --color=always --paging=always --file-name=$PTH_REL_ROOT)"
		--preview="git show \"\$(${COMMAND_EXTRACT_COMMIT}):$PTH_REL_ROOT\" | bat --color=always --paging=never --file-name=$PTH_REL_ROOT"
	)

	"$0" "${ARGV[@]}" | "${CMD[@]}"
else
	git-log-branch --follow "${ARGV[@]}"
fi
