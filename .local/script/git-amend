#!/usr/bin/env bash

set -Eeuo pipefail

args=$(getopt --name="$0" --options 'Aad:kr' --longoptions 'reset-author,keep-author-date,dates-from,keep-dates,in-rebase' -- "$@")
eval set -- "$args"

amend_params=()

while ((1)); do
	case "$1" in
		-A | --reset-author) amend_params+=(--reset-author); shift ;;
		-a | --keep-author-date) keep_author_date='1'; shift ;;
		-d | --dates-from) dates_from="$2"; shift 2 ;;
		-k | --keep-dates) keep_dates='1'; shift ;;
		-r | --in-rebase) in_rebase='1'; shift ;;
		--) shift; break ;;
	esac
done

if [[ "${keep_dates:-}" == "1" || "${keep_author_date:-}" == "1" ]]; then
	if [[ "${in_rebase:-}" == "1" ]]; then
		read -r <<< "$(tail -n1 .git/rebase-merge/rewritten-list)" source target
		GIT_AUTHOR_DATE="$(git author-date "$source")"
		GIT_COMMITTER_DATE="$(git commit-date "$source")"

		# echo "Restoring date for: $source"
		# echo "            author: $GIT_AUTHOR_DATE"
		# if [[ "${keep_dates:-}" == "1" ]]; then
		# 	echo "            commit: $GIT_COMMITTER_DATE"
		# fi
	else
		GIT_AUTHOR_DATE="$(git author-date "${dates_from:-HEAD}")"
		GIT_COMMITTER_DATE="$(git commit-date "${dates_from:-HEAD}")"
	fi

	export GIT_AUTHOR_DATE
	if [[ "${keep_dates:-}" == "1" ]]; then
		export GIT_COMMITTER_DATE
	fi

	# enforce author date via --date param
	# GIT_AUTHOR_DATE variable is sufficient only if author is being reset
	amend_params+=(--date="$GIT_AUTHOR_DATE")
fi

git commit --amend --allow-empty -nq --no-edit "${amend_params[@]}" "$@"
