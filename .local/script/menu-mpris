#!/usr/bin/env -S just --one -f

pretty := require('json-pretty')

export this := justfile()

export MPRIS :='org.mpris.MediaPlayer2'
export MPRIS_IF := MPRIS + '.Player'
export MPRIS_OBJ :='/org/mpris/MediaPlayer2'

# => default ------------------------------------------------------------------------------------------------------ {{{1

[private]
default:
    #!/usr/bin/env -S bash -Eeuo pipefail
    if [[ -t 1 ]]; then
        export FZF_RELOAD_CMD="$0"

        fzf_args=(
            --bind="load:execute-silent(setsid -f -- fzf-time-reload -i 3 '$0')+unbind(load)"
            --bind="alt-a:execute-silent(busctl --user --json=short get-property {1} $MPRIS_OBJ $MPRIS_IF -- LoopStatus | jq -r 'if (.data == \"None\") then \"Track\" elif (.data == \"Track\") then \"Playlist\" else \"None\" end' | xargs -r busctl --user set-property {1} $MPRIS_OBJ $MPRIS_IF -- LoopStatus s)+reload-sync($0)"
            --bind="alt-h:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x -60000000)+reload-sync($0)"
            --bind="alt-i:execute('{{this}}' list | jq 'select(.id == \"'{1}'\")' | {{pretty}} -Cpf {2})"
            --bind="alt-l:execute-silent( busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x  60000000)+reload-sync($0)"
            --bind="alt-r:execute-silent( busctl --user call {1} $MPRIS_OBJ $MPRIS    -- Quit)+reload-sync($0)"
            --bind="ctrl-b:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x -9999999999999)+reload-sync($0)"
            --bind="ctrl-m:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- PlayPause)+reload-sync($0)"
            --bind="ctrl-n:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Next)+reload-sync($0)"
            --bind="ctrl-p:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Previous)+reload-sync($0)"
            --bind="ctrl-y:execute-silent(echo -n {2} | clipcopy)"
            --bind="down:execute-silent(busctl --user --json=short get-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume | jq -r '.data - 0.05' | xargs -r busctl --user set-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume d)+reload-sync($0)"
            --bind="left:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x -10000000)+reload-sync($0)"
            --bind="right:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x  10000000)+reload-sync($0)"
            --bind="up:execute-silent(busctl --user --json=short get-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume | jq -r '.data + 0.05' | xargs -r busctl --user set-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume d)+reload-sync($0)"
            --footer="A-a:loop A-h:-60s A-l:+60s down:lower up:higher left:-10s right:+10s enter:play/pause C-b:begin C-n:next C-p:previous"
            --preview-window="right:60%:border-left:wrap:hidden"
            --preview="'{{this}}' list | jq 'select(.id == \"'{1}'\")' | {{pretty}} -C"
            --prompt="mpris > "
            --with-nth="3.."
            --track
        )

        "$0" | fzf-table "${fzf_args[@]}"
    else
        jq_fields=(
            '_id;\(.id)'
            '_url;\(.Metadata.\"xesam:url\")'
            'st;\(.PlaybackStatus | if . == "Playing" then "" else "" end);silver'
            'position;\(.Position / 1000000 | round)/\(.Metadata."mpris:length" / 1000000 | round)s/\(if .Metadata."mpris:length" == 0 then 0 else .Position / .Metadata."mpris:length" * 100 | round end)%;lime'
            'vol;\(.Volume)'
            'ch;\(.Chapter + 1)'
            'title;\(.Metadata."xesam:title");cyan'
            'track;\(.Metadata."xesam:titleTrack")'
            'artist;\(.Metadata."xesam:artist"[0]?);blue'
            'loop;\(.LoopStatus);silver'
            'created;\(.Metadata."xesam:contentCreated"[0:10]?);green'
        )

        "$this" list | jq -nc '[inputs | select(.PlaybackStatus != "Stopped")]' | json2table 'sort_by(.Metadata."xesam:title") | reverse | sort_by(.PlaybackStatus) | reverse' "${jq_fields[@]}"
    fi

# => list --------------------------------------------------------------------------------------------------------- {{{1

list:
    #!/usr/bin/env -S bash -Eeuo pipefail

    map_name=$(cat <<'EO_MAP_NAME'
        use constant {JSON_ONE_LINE => Cpanel::JSON::XS->new->canonical->utf8(0)->unblessed_bool([1])->pretty(0)->indent(0)};

        chomp;
        my $cmd = "busctl --user --json=short call $_ $ENV{MPRIS_OBJ} org.freedesktop.DBus.Properties -- GetAll s $ENV{MPRIS_IF}";
        my $payload = qx($cmd) or next;
        my \%d = JSON_ONE_LINE()->decode($payload);
        my %p = map {my \%it=$_; map {$_ => $it{$_}{data}} keys %it} $d{data}->@*;
        $p{id} = $_;
        my \%m = $p{Metadata};
        %m = map {$_ => $m{$_}{data}} grep {!m/artUrl/} keys %m;

        for (keys %m) {
            $m{$_} = url_unescape($m{$_} =~ s'^file://''r) if $m{$_} && $m{$_} =~ m'^file://';
        }

        say JSON_ONE_LINE()->encode(\%p);
    EO_MAP_NAME
    )

    busctl --user --json=short list \
        | jq -r '.[] | select(.name | test("'"$MPRIS"'")) | .name' \
        | perl -CAL -MCpanel::JSON::XS -MMojo::Util=url_unescape -Mexperimental=declared_refs,refaliasing -nE "$map_name" 2>/dev/null
