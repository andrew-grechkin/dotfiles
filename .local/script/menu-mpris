#!/usr/bin/env bash

set -Eeuo pipefail

args=$(getopt --name="$0" --options 'j' --longoptions 'json' -- "$@")
eval set -- "$args"

while ((1)); do
	case "$1" in
		-j | --json) json='1'; shift ;;
		--) shift; break ;;
	esac
done

export MPRIS='org.mpris.MediaPlayer2'
export MPRIS_IF="$MPRIS.Player"
export MPRIS_OBJ='/org/mpris/MediaPlayer2'

function mpris-get-items() {
	map_name=$(cat <<-'EO_MAP_NAME'
		use constant {JSON_ONE_LINE => Cpanel::JSON::XS->new->canonical->utf8(0)->unblessed_bool([1])->pretty(0)->indent(0)};

		chomp;
		my $cmd = "busctl --user --json=short call $_ $ENV{MPRIS_OBJ} org.freedesktop.DBus.Properties -- GetAll s $ENV{MPRIS_IF}";
		my $payload = qx($cmd) or next;
		my \%d = JSON_ONE_LINE()->decode($payload);
		my %p = map {my \%it=$_; map {$_ => $it{$_}{data}} keys %it} $d{data}->@*;
		$p{name} = $_;
		my \%m = $p{Metadata};
		%m = map {$_ => $m{$_}{data}} grep {!m/artUrl/} keys %m;

		for (keys %m) {
			$m{$_} = url_unescape($m{$_} =~ s'^file://''r) if $m{$_} && $m{$_} =~ m'^file://';
		}

		say JSON_ONE_LINE()->encode(\%p);
		EO_MAP_NAME
	)

	busctl --user --json=short list \
		| jq -r '.[] | select(.name | test("'"$MPRIS"'")) | .name' \
		| perl -CAL -MCpanel::JSON::XS -MMojo::Util=url_unescape -Mexperimental=declared_refs,refaliasing -nE "$map_name" 2>/dev/null
}

if [[ -n "${json:-}" ]]; then
	mpris-get-items
elif [[ -t 1 ]]; then
	fzf_cmd=(
		fzf
		--ansi
		--bind="alt-p:toggle-preview,ctrl-s:toggle-sort,ctrl-t:toggle-track"
		--bind="ctrl-d:half-page-down,ctrl-u:half-page-up,home:top"
		--bind="ctrl-e:toggle-preview-wrap,ctrl-n:preview-down,ctrl-p:preview-up"
		--bind="ctrl-w:backward-kill-word,esc:cancel"
		--bind="load:execute-silent(setsid -f -- fzf-time-reload -i 3 $0)+unbind(load)"
		--delimiter="\t"
		--header-lines=1
		--listen
		--reverse
		--scroll-off=4
		--tabstop=4
		--track
		--with-nth="2..-2"
	)
	fzf_args=(
		--bind="alt-a:execute-silent(busctl --user --json=short get-property {1} $MPRIS_OBJ $MPRIS_IF -- LoopStatus | jq -r 'if (.data == \"None\") then \"Track\" elif (.data == \"Track\") then \"Playlist\" else \"None\" end' | xargs busctl --user set-property {1} $MPRIS_OBJ $MPRIS_IF -- LoopStatus s)+reload-sync($0)"
		--bind="alt-b:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x -9999999999999)+reload-sync($0)"
		--bind="alt-h:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x -60000000)+reload-sync($0)"
		--bind="alt-j:execute-silent(busctl --user --json=short get-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume | jq -r '.data - 0.05' | xargs busctl --user set-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume d)+reload-sync($0)"
		--bind="alt-k:execute-silent(busctl --user --json=short get-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume | jq -r '.data + 0.05' | xargs busctl --user set-property {1} $MPRIS_OBJ $MPRIS_IF -- Volume d)+reload-sync($0)"
		--bind="alt-l:execute-silent( busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x  60000000)+reload-sync($0)"
		--bind="alt-r:execute-silent( busctl --user call {1} $MPRIS_OBJ $MPRIS    -- Quit)+reload-sync($0)"
		--bind="ctrl-h:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x -10000000)+reload-sync($0)"
		--bind="ctrl-l:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Seek x  10000000)+reload-sync($0)"
		--bind="ctrl-m:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- PlayPause)+reload-sync($0)"
		--bind="ctrl-n:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Next)+reload-sync($0)"
		--bind="ctrl-p:execute-silent(busctl --user call {1} $MPRIS_OBJ $MPRIS_IF -- Previous)+reload-sync($0)"
		--bind="ctrl-r:reload-sync($0)"
		--bind="ctrl-y:execute-silent(echo -n {-1} | clipcopy)"
		--header="A-a:loop A-b:begin A-j:lower A-k:higher A-h:-60s A-l:+60s C-h:-10s C-l:+10s C-m:play/pause C-n:next C-p:previous C-r:reload C-y:yank"
		--preview-window="right:60%:border-left:wrap:hidden"
		--preview="echo -n {-1}"
		--prompt="mpris > "
	)

	"$0" | "${fzf_cmd[@]}" "${fzf_args[@]}"
else
	source "$HOME/.local/lib/shell/data-processing.bash"

	jq_fields=(
		"name;\(.name)"
		"state;$(tput setaf 7)\(.PlaybackStatus)$ansi_reset"
		"position;$(tput setaf 10)\(.Position / 1000000 | round)/\(.Metadata.\"mpris:length\" / 1000000 | round)s (\(if .Metadata.\"mpris:length\" == 0 then 0 else .Position / .Metadata.\"mpris:length\" * 100 | round end)%)$ansi_reset"
		"volume;\(.Volume)"
		"loop;$(tput setaf 7)\(.LoopStatus)$ansi_reset"
		"title;$(tput setaf 14)\(.Metadata.\"xesam:title\")$ansi_reset"
		"artist;$(tput setaf 12)\(.Metadata.\"xesam:artist\"[0]?)$ansi_reset"
		"created;$(tput setaf 2)\(.Metadata.\"xesam:contentCreated\"[0:10]?)$ansi_reset"
		"url;$(tput setaf 6)\(.Metadata.\"xesam:url\")$ansi_reset"
	)

	"$0" -j | jq -nc '[inputs | select(.PlaybackStatus != "Stopped")]' | json-array-to-tsv 'sort_by(.Metadata."xesam:title") | reverse | sort_by(.PlaybackStatus) | reverse' "${jq_fields[@]}"
fi
