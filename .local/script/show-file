#!/usr/bin/env bash

set -Eeuo pipefail

bat_options=(
	--style=numbers
	--color=always
	--tabs=4
	-pp
)

function header() {
	stat "$1"

	echo "  Type: $(file -b "$1")"

	size=$2
	(( size > 10000000 )) && return

	echo "  SHA1: $(sha1sum -b "$1" | awk '{print $1}')"
}

function body() {
	mime=$(file -bi "$1")
	echo "  MIME: $mime"

	file=$(basename "$1")
	base="${file%.[^.]*}"
	ext="${file:${#base} + 1}"

	if [[ "$mime" == 'application/json' || "$ext" == "json" ]]; then
		jq -S --indent 2 < "$1" | bat -l json "${bat_options[@]}"; exit 0
	elif [[ "$mime" =~ application/x-.*executable ]]; then
		{ readelf -dW "$1" && echo && nm -DC "$1"; } && exit 0
	elif [[ "$mime" == 'application/x-sharedlib' ]]; then
		{
			{ readelf -dW "$1" && echo && nm -DC "$1"; } || { objdump -xfTC "$1"; }
		} && exit 0
	elif [[ "$mime" == 'text/x-shellscript' ]]; then
		bat -l 'Bourne Again Shell (bash)' "${bat_options[@]}"  "$1" && exit 0
	elif [[ "$mime" == 'application/x-object' ]]; then
		{ nm -ClS "$1"; echo; objdump -afltSd "$1"; } && exit 0
	elif [[ "$mime" == 'application/x-archive' ]]; then
		nm -C "$1" && exit 0
	elif [[ "$mime" =~ image/ ]]; then
		yaml_file="$base.yml"
		[[ -r "$yaml_file" ]] && bat -l yaml "${bat_options[@]}" "$yaml_file"
		(( size < 10000000 )) && {
			cols=$(tput cols)
			cols=${cols:-120}
			{ chafa --clear -c full -s "${cols}x${cols}" -f symbols --polite on "$1"; } || true
		}
		exit 0
	elif [[ "$ext" == "conf" ]]; then
		bat -l conf "${bat_options[@]}" "$1" && exit 0
	elif [[ "$ext" =~ yaml?$ ]]; then
		yaml-sanitize < "$1" | yamlfix - | bat -l yaml "${bat_options[@]}" && exit 0
	elif [[ "$ext" == "tsv" ]]; then
		tsv-align "$1" | bat -l tsv --wrap=never "${bat_options[@]}" --color=always && exit 0
	else
		echo
	fi
}

function footer() {
	size=$2

	if [[ "$mime" =~ charset=binary ]]; then
		hexdump -C "$1" && exit 0
	elif (( size < 1000000 )); then
		bat "${bat_options[@]}"  "$1" \
			|| cat "$1"
		(( size > 255)) && return
		echo
		hexdump -C "$1" && exit 0
	fi

	cat "$1"
}

[[ -f "$1" ]] && {
	size=$(command stat -c %s "$1")
	header "$1" "$size"

	filepath="$(realpath "$1")"
	body "$filepath" "$size"
	(( size > 10000000 )) || footer "$filepath" "$size"
}
# } 2> /dev/null
