#!/usr/bin/env bash

set -Eeuo pipefail

[[ -r "$1" ]] || exit 2

export PODMAN_USERNS=keep-id

FILE_PATH="$(realpath -s "$1")"
DIR_PATH="$(dirname "$FILE_PATH")"
FILE_NAME="$(basename "$FILE_PATH")"

TMP_NAME="$SRANDOM"
TMP_PATH="/tmp/$TMP_NAME"

mkdir -p "$TMP_PATH"
chmod a+rwX "$TMP_PATH"

cp -r "$DIR_PATH/." "$TMP_PATH/"

function clean() {
	rm -rf "$TMP_PATH"
}
trap clean EXIT

case "$FILE_NAME" in
	*presentation.md)
		echo "Processing presentation: $FILE_PATH" >/dev/stderr \
			&& docker run --rm -q -v "$TMP_PATH:/data:rw" "docker.io/minlag/mermaid-cli" -q -b transparent -i "/data/$FILE_NAME" -o "/data/$TMP_NAME.mmd.md" \
			&& docker run --rm -q -v "$TMP_PATH:/data:rw" "docker.io/pandoc/latex:latest-ubuntu" -f markdown+smart -t beamer -o "/data/$TMP_NAME.pdf" "/data/$TMP_NAME.mmd.md" \
			&& zathura --mode=presentation - <"$TMP_PATH/$TMP_NAME.pdf" &>/dev/null
		;;
	*.Rmd)
		echo "Processing r-markdown: $FILE_PATH" >/dev/stderr \
			&& docker run --rm -q -v "$TMP_PATH:/data:rw" -w "/data" "docker.io/rocker/verse" /usr/local/lib/R/site-library/knitr/bin/knit "$FILE_NAME" -n >/dev/stderr \
			&& docker run --rm -q -v "$TMP_PATH:/data:rw" "docker.io/minlag/mermaid-cli" -q -b transparent --outputFormat png -i "/data/${1%.Rmd}.md" -o "/data/$TMP_NAME.mmd.md" \
			&& docker run --rm -q -v "$TMP_PATH:/data:ro" "docker.io/pandoc/latex:latest-ubuntu" -f markdown+smart -t pdf "/data/$TMP_NAME.mmd.md" \
			| zathura - &>/dev/null
		;;
	*.md | *.mkd | *.mdwiki)
		echo "Processing markdown: $FILE_PATH" >/dev/stderr \
			&& docker run --rm -q -v "$DIR_PATH:/data:ro" "docker.io/pandoc/latex:latest-ubuntu" -f markdown+smart -t pdf "/data/$FILE_NAME" \
			| zathura - &>/dev/null
		;;
	*) echo 'unknown' ;;
esac
