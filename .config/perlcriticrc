# vim: filetype=dosini foldmethod=marker
# man: perlcritic

severity = 1
#only     = 1
#top      = 8
verbose  = [%s %p] %m at %f:%l:%c, near '%r'\n

color                  = 1
color-severity-highest = bold white on_red
color-severity-high    = bold white on_yellow
color-severity-medium  = bold yellow
color-severity-low     = bold cyan

[-BCritical::CronjobGuide::ProhibitPrint]
[-BCritical::CronjobGuide::ProhibitUnnecessaryUtf8Uses]
[-BCritical::CronjobGuide::RequireEmail]
[-BCritical::EngGuide::RequireStrictDeclarations]

# => disabled 5 --------------------------------------------------------------------------------------------------- {{{1

[-Subroutines::ProhibitExplicitReturnUndef]

# Currently misidentifies signatures
# Different one available below
[-Subroutines::ProhibitSubroutinePrototypes]

[-TryTiny::RequireUse]

# => disabled 4 --------------------------------------------------------------------------------------------------- {{{1

[-Bangs::ProhibitDebuggingModules]

# expression-based "map"/"grep" are faster
[-BuiltinFunctions::RequireBlockGrep]
[-BuiltinFunctions::RequireBlockMap]

# <> is automatic, while <ARGV> and <STDIN> are explicit
[-InputOutput::ProhibitExplicitStdin]

# I disagree with a few of these, and there is no overrides
# I keep this here as a placeholder in case that changes
# or to check this once in a while to see if there are new modules
[-Freenode::DiscouragedModules]

# No need.
# Already available in core policy
[-Freenode::StrictWarnings]

[-Modules::ProhibitMultiplePackages]

[-Subroutines::ProhibitBuiltinHomonyms]

# Can't find how to mark DSL keywords
# (Moo{,se} provides has/with/extends/etc., Dancer{,2} provides more)
# This is problematic
[-Subroutines::ProhibitCallsToUndeclaredSubs]

# Calls to full-path subroutines is a clean practice, IMHO
[-Subroutines::ProhibitCallsToUnexportedSubs]

# constant.pm > Const::Fast > Readonly
[-ValuesAndExpressions::ProhibitConstantPragma]

# something && something or something || something is useful
[-ValuesAndExpressions::ProhibitMixedBooleanOperators]

# => disabled 3 --------------------------------------------------------------------------------------------------- {{{1

# This is not flexible enough. I want to call my vars like $something_sha1 and similar
[-Bangs::ProhibitNumberedNames]
[-Bangs::ProhibitVagueNames]

[-BuiltinFunctions::ProhibitComplexMappings]
[-BuiltinFunctions::ProhibitUniversalIsa]

[-ErrorHandling::RequireCarping]

[-Lax::ProhibitComplexMappings::LinesNotStatements]

# This is helpful for scripts, not for everyone
[-Modules::ProhibitExcessMainComplexity]

[-NamingConventions::ProhibitAmbiguousNames]
# forbid = abstract bases close contract last left no record right second set

[-ValuesAndExpressions::ProhibitVersionStrings]

# => disabled 2 --------------------------------------------------------------------------------------------------- {{{1

[-Bangs::ProhibitCommentedOutCode]

[-Community::Each]
[-Community::EmptyReturn]
[-Community::Prototypes]
[-Community::Wantarray]
[-Freenode::Each]
[-Freenode::EmptyReturn]
[-Freenode::Prototypes]
[-Freenode::Wantarray]

# Specific projects should override this
[-Documentation::RequirePodSections]
# The sections to require for modules (separated by qr/\s* [|] \s*/xms).
# lib_sections =
# The sections to require for programs (separated by qr/\s* [|] \s*/xms).
# script_sections =
# The origin of sections to use.
# Valid values: book, book_first_edition, module_starter_pbp, module_starter_pbp_0_0_3.
# source = book_first_edition
# The spelling of sections to use.
# Valid values: en_AU, en_US.
# language =

# This also checks for one-arg open(), unlike the core policy
# Already available in core policy
[-Freenode::POSIXImports]

# When closing scope, an implicit "close()" is called
# However, the error was not fixed
# RT #57512
[-InputOutput::RequireCheckedClose]

[-Lax::ProhibitEmptyQuotes::ExceptAsFallback]
[-Lax::RequireConstantOnLeftSideOfEquality::ExceptEq]

# It does not work for some Dist::Zilla modules
[-Modules::RequireVersionVar]

[-References::ProhibitDoubleSigils]

# do not require m//ms in regexps
[-RegularExpressions::RequireDotMatchAnything]
[-RegularExpressions::RequireLineBoundaryMatching]

[-Tics::ProhibitLongLines]

[-ValuesAndExpressions::ProhibitEmptyQuotes]

# This exlucdes stuff like '/', which is silly.
[-ValuesAndExpressions::ProhibitNoisyQuotes]

# => disabled 1 --------------------------------------------------------------------------------------------------- {{{1

[-CodeLayout::ProhibitParensWithBuiltins]

# This should be checked separately per project. Not enforced automatically (It also makes any editor plugin slower)
[-CodeLayout::RequireTidyCode]

[-ControlStructures::ProhibitCStyleForLoops]

# This can make stuff slow and should be checked elsewhere
[-Documentation::PodSpelling]

[-Freenode::EmptyReturn]

[-NamingConventions::Capitalization]

# false positive for signatures
[-ValuesAndExpressions::RequireInterpolationOfMetachars]

# => 5 ------------------------------------------------------------------------------------------------------------ {{{1

# 5 Bangs::ProhibitBitwiseOperators [bangs bugs]
# 5 BuiltinFunctions::ProhibitSleepViaSelect [bugs core pbp]
# 5 BuiltinFunctions::ProhibitStringyEval [bugs certrule core pbp]
# 5 BuiltinFunctions::RequireGlobFunction [bugs core pbp]
# 5 ClassHierarchies::ProhibitOneArgBless [bugs core pbp]
# 5 ControlStructures::ProhibitMutatingListFunctions [bugs certrule core pbp]
# 5 Freenode::IndirectObjectNotation [freenode]
# 5 InputOutput::ProhibitBarewordFileHandles [bugs certrec core pbp]
# 5 InputOutput::ProhibitInteractiveTest [bugs certrule core pbp]
# 5 InputOutput::ProhibitTwoArgOpen [bugs certrule core pbp security]
# 5 InputOutput::RequireEncodingWithUTF8Layer [bugs core security]
# 5 Lax::ProhibitLeadingZeros::ExceptChmod [bugs certrec core pbp]
# 5 Lax::ProhibitStringyEval::ExceptForRequire [danger]
# 5 Modules::ProhibitEvilModules [bugs certrule core]
# 5 Modules::RequireBarewordIncludes [core portability]
# 5 Modules::RequireFilenameMatchesPackage [bugs core]
# 5 Perlsecret [perlsecret]
# 5 Subroutines::ProhibitExplicitReturnUndef [bugs certrec core pbp]
# 5 Subroutines::ProhibitNestedSubs [bugs core]
# 5 Subroutines::ProhibitReturnSort [bugs certrule core]
# 5 Subroutines::ProhibitSubroutinePrototypes [bugs certrec core pbp]
# 5 TestingAndDebugging::ProhibitNoStrict [bugs certrec core pbp]
# 5 TestingAndDebugging::RequireUseStrict [bugs certrec certrule core pbp]
# 5 TryTiny::RequireUse [bugs]
# 5 ValuesAndExpressions::PreventSQLInjection [security]
# 5 ValuesAndExpressions::ProhibitLeadingZeros [bugs certrec core pbp]
# 5 Variables::ProhibitConditionalDeclarations [bugs core]
# 5 Variables::RequireLexicalLoopIterators [bugs certrec core pbp]

[-InputOutput::ProhibitInteractiveTest]

# Added: Readonly, base, File::Slurp, common::sense, Class::Load, Any::Moose, Error, Getopt::Std, HTML::Template,
#        IO::Socket::INET6, JSON, JSON::Any, List::MoreUtils, Mouse, Net::IRC, XML::Simple, Sub::Infix
[Modules::ProhibitEvilModules]
modules = Class::ISA {Found use of Class::ISA. This module is deprecated by the Perl 5 Porters} Pod::Plainer {Found use of Pod::Plainer. This module is deprecated by the Perl 5 Porters} Shell {Found use of Shell. This module is deprecated by the Perl 5 Porters} Switch {Found use of Switch. This module is deprecated by the Perl 5 Porters} Readonly {Found use of Readonly. Please use constant.pm or Const::Fast} base {Found use of base. Please use parent instead} File::Slurp {Found use of File::Slurp. Please use Path::Tiny instead} common::sense {Found use of common::sense. Please use strict and warnings instead} Class::Load {Found use of Class::Load. Please use Module::Runtime instead} Any::Moose {Found use of Any::Moose. Please use Moo instead} Error {Found use of Error.pm. Please use Throwable.pm instead} Getopt::Std {Found use of Getopt::Std. Please use Getopt::Long instead} HTML::Template {Found use of HTML::Template. Please use Template::Toolkit} IO::Socket::INET6 {Found use of IO::Socket::INET6. Please use IO::Socket::IP} Mouse {Found use of Mouse. Please use Moo} Net::IRC {Found use of Net::IRC. Please use POE::Component::IRC, Net::Async::IRC, or Mojo::IRC} XML::Simple {Found use of XML::Simple. Please use XML::LibXML, XML::TreeBuilder, XML::Twig, or Mojo::DOM} Sub::Infix {Found use of Sub::Infix. Please do not use it} Dancer {Dancer is not supported. Please use Dancer2} Try::Tiny {Found use of Try::Tiny. Please use Syntax::Keyword::Try/eval or do instead} Cpanel::JSON::XS {Found use of Cpanel::JSON:XS. Please use JSON::MaybeXS} JSON::XS {Found use of JSON::XS. Please use JSON::MaybeXS} YAML {Found use of YAML. Please use YAML::XS instead} YAML::Tiny {Found use of YAML::Tiny. Please use YAML::XS instead}

[Perlsecret]
allow_secrets = Abbott and Costello, Baby Cart, Bang Bang, Enterprise, Goatse, Leaning Abbott and Costello, Venus, Winking Fat Comma

[TestingAndDebugging::ProhibitNoStrict]
# This is a common patterns to (re)define glob CODE entries
allow = refs

[TestingAndDebugging::RequireUseStrict]
equivalent_modules = Dancer Dancer2 Moo Moose Moo::Role Moose::Role strictures

[TestingAndDebugging::RequireUseWarnings]
equivalent_modules = Dancer Dancer2 Moo Moose Moo::Role Moose::Role strictures

# builtins that deal with Unix permissions, e.g. chmod, don't get flagged
[ValuesAndExpressions::ProhibitLeadingZeros]
strict = 0

# => 4 ------------------------------------------------------------------------------------------------------------ {{{1

# 4 Bangs::ProhibitDebuggingModules [bangs maintenance]
# 4 Bangs::ProhibitRefProtoOrProto [bangs complexity]
# 4 Bangs::ProhibitUselessRegexModifiers [bangs bugs]
# 4 BuiltinFunctions::RequireBlockGrep [bugs core pbp]
# 4 BuiltinFunctions::RequireBlockMap [bugs core pbp]
# 4 CodeLayout::RequireConsistentNewlines [bugs core]
# 4 ControlStructures::ProhibitLabelsWithSpecialBlockNames [bugs core]
# 4 ControlStructures::ProhibitUnreachableCode [bugs certrec core]
# 4 ControlStructures::ProhibitYadaOperator [core maintenance pbp]
# 4 Freenode::AmpersandSubCalls [freenode]
# 4 Freenode::BarewordFilehandles [freenode]
# 4 Freenode::ConditionalDeclarations [freenode]
# 4 Freenode::DeprecatedFeatures [freenode]
# 4 Freenode::DiscouragedModules [freenode]
# 4 Freenode::DollarAB [freenode]
# 4 Freenode::LexicalForeachIterator [freenode]
# 4 Freenode::LoopOnHash [freenode]
# 4 Freenode::ModPerl [freenode]
# 4 Freenode::OverloadOptions [freenode]
# 4 Freenode::PackageMatchesFilename [freenode]
# 4 Freenode::StrictWarnings [freenode]
# 4 Freenode::WhileDiamondDefaultAssignment [freenode]
# 4 InputOutput::ProhibitExplicitStdin [core maintenance pbp]
# 4 InputOutput::ProhibitOneArgSelect [bugs certrule core pbp]
# 4 InputOutput::ProhibitReadlineInForLoop [bugs core pbp]
# 4 InputOutput::RequireBriefOpen [core maintenance pbp]
# 4 Lax::RequireEndWithTrueConst [lax]
# 4 Lax::RequireExplicitPackage::ExceptForPragmata [risky]
# 4 Modules::ProhibitAutomaticExportation [bugs core]
# 4 Modules::ProhibitMultiplePackages [bugs core]
# 4 Modules::RequireEndWithOne [bugs certrule core pbp]
# 4 Modules::RequireExplicitInclusion [bugs strictersubs]
# 4 Modules::RequireExplicitPackage [bugs core]
# 4 Moose::ProhibitMultipleWiths [bugs moose roles]
# 4 Moose::ProhibitNewMethod [bugs moose]
# 4 Objects::ProhibitIndirectSyntax [certrule core maintenance pbp]
# 4 Subroutines::ProhibitBuiltinHomonyms [bugs certrule core pbp]
# 4 Subroutines::ProhibitCallsToUndeclaredSubs [bugs strictersubs]
# 4 Subroutines::ProhibitCallsToUnexportedSubs [bugs strictersubs]
# 4 Subroutines::ProhibitExportingUndeclaredSubs [bugs strictersubs]
# 4 Subroutines::RequireArgUnpacking [core maintenance pbp]
# 4 Subroutines::RequireFinalReturn [bugs certrec core pbp]
# 4 TestingAndDebugging::ProhibitNoWarnings [bugs certrec core pbp]
# 4 TestingAndDebugging::ProhibitProlongedStrictureOverride [bugs certrec core pbp]
# 4 TestingAndDebugging::RequireUseWarnings [bugs certrule core pbp]
# 4 TryTiny::RequireBlockTermination [bugs]
# 4 ValuesAndExpressions::ProhibitCommaSeparatedStatements [bugs certrule core pbp]
# 4 ValuesAndExpressions::ProhibitConstantPragma [bugs core pbp]
# 4 ValuesAndExpressions::ProhibitMixedBooleanOperators [bugs certrec core pbp]
# 4 Variables::ProhibitAugmentedAssignmentInDeclaration [bugs core]
# 4 Variables::ProhibitLoopOnHash [bugs]
# 4 Variables::ProhibitMatchVars [core pbp performance]
# 4 Variables::RequireLocalizedPunctuationVars [bugs certrec core pbp]
# 4 Variables::RequireNegativeIndices [core maintenance pbp]

[-InputOutput::RequireBriefOpen]
# lines = 20

[Freenode::DollarAB]
extra_pair_functions = reduce

[Modules::RequireExplicitPackage]
# No point requiring "package main"
exempt_scripts = 1

[Moose::ProhibitMultipleWiths]
equivalent_modules = Moo Moo::Role

[Moose::ProhibitNewMethod]
equivalent_modules = Moo Moo::Role

[TestingAndDebugging::ProhibitNoWarnings]
allow = experimental

# This does not like single line subroutines, and also: http://stackoverflow.com/questions/2275317/why-does-perlcritic-dislike-using-shift-to-populate-subroutine-variables
[Subroutines::RequireArgUnpacking]
# The number of statements to allow without unpacking.
short_subroutine_statements = 2

[ValuesAndExpressions::ProhibitCommaSeparatedStatements]
# Allow map and grep blocks to return lists.
allow_last_statement_to_be_comma_separated_in_map_and_grep = 0

[-Modules::RequireEndWithOne]

# => 3 ------------------------------------------------------------------------------------------------------------ {{{1

# 3 Bangs::ProhibitNumberedNames [bangs maintenance]
# 3 Bangs::ProhibitVagueNames [bangs readability]
# 3 BuiltinFunctions::ProhibitComplexMappings [complexity core maintenance pbp]
# 3 BuiltinFunctions::ProhibitLvalueSubstr [core maintenance pbp]
# 3 BuiltinFunctions::ProhibitReturnOr [bugs zr]
# 3 BuiltinFunctions::ProhibitShiftRef [bugs core tests]
# 3 BuiltinFunctions::ProhibitUniversalCan [certrule core maintenance]
# 3 BuiltinFunctions::ProhibitUniversalIsa [certrule core maintenance]
# 3 BuiltinFunctions::ProhibitVoidGrep [core maintenance]
# 3 BuiltinFunctions::ProhibitVoidMap [core maintenance]
# 3 BuiltinFunctions::RequireSimpleSortBlock [complexity core maintenance pbp]
# 3 ClassHierarchies::ProhibitAutoloading [core maintenance pbp]
# 3 ClassHierarchies::ProhibitExplicitISA [certrec core maintenance pbp]
# 3 CodeLayout::ProhibitFatCommaNewline [bugs pulp]
# 3 CodeLayout::ProhibitHardTabs [core cosmetic pbp]
# 3 CodeLayout::ProhibitHashBarewords [itch]
# 3 CodeLayout::ProhibitIfIfSameLine [bugs pulp]
# 3 Compatibility::ConstantLeadingUnderscore [compatibility pulp]
# 3 Compatibility::ConstantPragmaHash [compatibility pulp]
# 3 Compatibility::Gtk2Constants [bugs pulp]
# 3 ControlStructures::ProhibitCascadingIfElse [complexity core maintenance pbp]
# 3 ControlStructures::ProhibitDeepNests [complexity core maintenance]
# 3 ControlStructures::ProhibitNegativeExpressionsInUnlessAndUntilConditions [core maintenance pbp]
# 3 Documentation::ProhibitDuplicateHeadings [bugs pulp]
# 3 ErrorHandling::RequireCarping [certrule core maintenance pbp]
# 3 ErrorHandling::RequireCheckingReturnValueOfEval [bugs core]
# 3 Freenode::ArrayAssignAref [freenode]
# 3 Freenode::ConditionalImplicitReturn [freenode]
# 3 Freenode::OpenArgs [freenode]
# 3 Freenode::Prototypes [freenode]
# 3 Freenode::Threads [freenode]
# 3 HTTPCookies [http lwp]
# 3 InputOutput::ProhibitBacktickOperators [core maintenance]
# 3 InputOutput::ProhibitJoinedReadline [core pbp performance]
# 3 InputOutput::RequireCheckedOpen [certrule core maintenance]
# 3 Lax::ProhibitComplexMappings::LinesNotStatements [complexity lax]
# 3 Miscellanea::ProhibitFormats [certrule core maintenance pbp]
# 3 Miscellanea::ProhibitUnrestrictedNoCritic [core maintenance]
# 3 Miscellanea::TextDomainPlaceholders [bugs pulp]
# 3 Modules::ProhibitConditionalUseStatements [bugs core]
# 3 Modules::ProhibitExcessMainComplexity [complexity core maintenance]
# 3 Modules::ProhibitUseQuotedVersion [bugs pulp]
# 3 Moo::ProhibitMakeImmutable [performance]
# 3 Moose::ProhibitDESTROYMethod [bugs moose]
# 3 Moose::RequireCleanNamespace [maintenance moose]
# 3 Moose::RequireMakeImmutable [moose performance]
# 3 NamingConventions::ProhibitAmbiguousNames [core maintenance pbp]
# 3 RegularExpressions::ProhibitCaptureWithoutTest [certrule core maintenance pbp]
# 3 RegularExpressions::ProhibitComplexRegexes [core maintenance pbp]
# 3 RegularExpressions::ProhibitUnusedCapture [core maintenance pbp]
# 3 RegularExpressions::RequireExtendedFormatting [core maintenance pbp]
# 3 Subroutines::ProhibitExcessComplexity [complexity core maintenance]
# 3 Subroutines::ProhibitManyArgs [core maintenance pbp]
# 3 Subroutines::ProhibitQualifiedSubDeclarations [bugs strictersubs]
# 3 Subroutines::ProhibitUnusedPrivateSubroutines [certrec core maintenance]
# 3 Subroutines::ProtectPrivateSubs [certrule core maintenance]
# 3 TestingAndDebugging::RequireTestLabels [core maintenance tests]
# 3 Tics::ProhibitManyArrows [tics]
# 3 ValuesAndExpressions::ConstantBeforeLt [bugs pulp]
# 3 ValuesAndExpressions::NotWithCompare [bugs pulp]
# 3 ValuesAndExpressions::ProhibitArrayAssignAref [bugs pulp]
# 3 ValuesAndExpressions::ProhibitComplexVersion [core maintenance]
# 3 ValuesAndExpressions::ProhibitDuplicateHashKeys [bugs pulp]
# 3 ValuesAndExpressions::ProhibitFiletest_f [bugs pulp]
# 3 ValuesAndExpressions::ProhibitImplicitNewlines [core cosmetic pbp]
# 3 ValuesAndExpressions::ProhibitMismatchedOperators [bugs certrule core]
# 3 ValuesAndExpressions::ProhibitNullStatements [cosmetic pulp]
# 3 ValuesAndExpressions::ProhibitQuotesAsQuotelikeOperatorDelimiters [core maintenance]
# 3 ValuesAndExpressions::ProhibitSpecialLiteralHeredocTerminator [core maintenance]
# 3 ValuesAndExpressions::ProhibitUnknownBackslash [cosmetic pulp]
# 3 ValuesAndExpressions::ProhibitVersionStrings [core maintenance pbp]
# 3 ValuesAndExpressions::RequireNumericVersion [bugs pulp]
# 3 ValuesAndExpressions::RequireQuotedHeredocTerminator [core maintenance pbp]
# 3 ValuesAndExpressions::UnexpandedSpecialLiteral [bugs pulp]
# 3 Variables::ProhibitPackageVars [core maintenance pbp]
# 3 Variables::ProhibitReusedNames [bugs core]
# 3 Variables::ProhibitUnusedVariables [certrec core maintenance]
# 3 Variables::ProtectPrivateVars [certrule core maintenance]
# 3 Variables::RequireInitializationForLocalVars [bugs certrec core pbp]

[ControlStructures::ProhibitCascadingIfElse]
max_elsif = 5

[ControlStructures::ProhibitDeepNests]
max_nests = 4

[Moose::ProhibitDESTROYMethod]
equivalent_modules = Moo Moo::Role

[InputOutput::ProhibitBacktickOperators]
only_in_void_context = 1

[Subroutines::ProhibitManyArgs]
max_arguments = 6

# Can we change this to exclude single sentence regexes?
[RegularExpressions::RequireExtendedFormatting]
minimum_regex_length_to_complain_about = 50
# strict means: regexes that only contain whitespace and word characters
strict = 0

# Allow Moose builders
[Subroutines::ProhibitUnusedPrivateSubroutines]
private_name_regex = _(?!build)\w+

[ValuesAndExpressions::ProhibitComplexVersion]
# Make "use version; our $VERSION = qv('1.2.3');" a violation of this policy.
forbid_use_version = 1

[Variables::ProhibitPackageVars]
# packages = Data::Dumper File::Find FindBin Log::Log4perl
# Add the following list to the above list
add_packages = Carp Test::Builder

# => 2 ------------------------------------------------------------------------------------------------------------ {{{1

# 2 Bangs::ProhibitCommentedOutCode [bangs maintenance]
# 2 Bangs::ProhibitFlagComments [bangs maintenance]
# 2 Bangs::ProhibitNoPlan [bangs tests]
# 2 BuiltinFunctions::ProhibitBooleanGrep [certrec core pbp performance]
# 2 BuiltinFunctions::ProhibitDeleteOnArrays [maintenance]
# 2 BuiltinFunctions::ProhibitStringySplit [certrule core cosmetic pbp]
# 2 BuiltinFunctions::ProhibitUselessTopic [core]
# 2 CodeLayout::ProhibitQuotedWordLists [core cosmetic]
# 2 CodeLayout::RequireFinalSemicolon [cosmetic pulp]
# 2 CodeLayout::RequireTrailingCommaAtNewline [cosmetic pulp]
# 2 Compatibility::PodMinimumVersion [compatibility pulp]
# 2 Compatibility::ProhibitUnixDevNull [bugs pulp]
# 2 ControlStructures::ProhibitCStyleForLoops [core maintenance pbp]
# 2 ControlStructures::ProhibitPostfixControls [core cosmetic pbp]
# 2 ControlStructures::ProhibitUnlessBlocks [core cosmetic pbp]
# 2 ControlStructures::ProhibitUntilBlocks [core cosmetic pbp]
# 2 Documentation::ProhibitBadAproposMarkup [cosmetic pulp]
# 2 Documentation::ProhibitDuplicateSeeAlso [cosmetic pulp]
# 2 Documentation::ProhibitLinkToSelf [cosmetic pulp]
# 2 Documentation::ProhibitUnbalancedParens [cosmetic pulp]
# 2 Documentation::ProhibitVerbatimMarkup [cosmetic pulp]
# 2 Documentation::RequireEndBeforeLastPod [cosmetic pulp]
# 2 Documentation::RequireFilenameMarkup [cosmetic pulp]
# 2 Documentation::RequireLinkedURLs [cosmetic pulp]
# 2 Documentation::RequirePodSections [core maintenance pbp]
# 2 Freenode::Each [freenode]
# 2 Freenode::POSIXImports [freenode]
# 2 Freenode::PreferredAlternatives [freenode]
# 2 Freenode::Wantarray [freenode]
# 2 Freenode::WarningsSwitch [freenode]
# 2 InputOutput::RequireCheckedClose [certrule core maintenance]
# 2 Lax::ProhibitEmptyQuotes::ExceptAsFallback [lax]
# 2 Lax::RequireConstantOnLeftSideOfEquality::ExceptEq [more]
# 2 Miscellanea::ProhibitTies [core maintenance pbp]
# 2 Miscellanea::ProhibitUselessNoCritic [core maintenance]
# 2 Miscellanea::TextDomainUnused [cosmetic pulp]
# 2 Modules::ProhibitModuleShebang [cosmetic pulp]
# 2 Modules::ProhibitPOSIXimport [efficiency pulp]
# 2 Modules::RequireNoMatchVarsWithUseEnglish [core performance]
# 2 Modules::RequireVersionVar [core pbp readability]
# 2 Moose::ProhibitLazyBuild [bugs moose]
# 2 References::ProhibitDoubleSigils [core cosmetic pbp]
# 2 RegularExpressions::ProhibitFixedStringMatches [core pbp performance]
# 2 RegularExpressions::ProhibitUselessTopic [core]
# 2 RegularExpressions::RequireDotMatchAnything [core cosmetic pbp]
# 2 RegularExpressions::RequireLineBoundaryMatching [core cosmetic pbp]
# 2 Subroutines::ProhibitAmpersandSigils [core maintenance pbp]
# 2 Tics::ProhibitLongLines [tics]
# 2 Tics::ProhibitUseBase [tics]
# 2 ValuesAndExpressions::ProhibitEmptyCommas [cosmetic pulp]
# 2 ValuesAndExpressions::ProhibitEmptyQuotes [core cosmetic pbp]
# 2 ValuesAndExpressions::ProhibitEscapedCharacters [core cosmetic pbp]
# 2 ValuesAndExpressions::ProhibitLongChainsOfMethodCalls [core maintenance]
# 2 ValuesAndExpressions::ProhibitMagicNumbers [certrec core maintenance]
# 2 ValuesAndExpressions::ProhibitNoisyQuotes [core cosmetic pbp]
# 2 ValuesAndExpressions::RequireConstantVersion [core maintenance]
# 2 ValuesAndExpressions::RequireNumberSeparators [core cosmetic pbp]
# 2 ValuesAndExpressions::RequireUpperCaseHeredocTerminator [core cosmetic pbp]
# 2 Variables::ProhibitLocalVars [core maintenance pbp]
# 2 Variables::ProhibitPerl4PackageNames [certrec core maintenance]
# 2 Variables::ProhibitPunctuationVars [core cosmetic pbp]
# 2 Variables::ProhibitUselessInitialization [JTRAMMELL petpeeves]

# allow TODO in comments
[Bangs::ProhibitFlagComments]
keywords = XXX FIXME BUG REVIEW

[ControlStructures::ProhibitPostfixControls]
# Debugging statements go here (DEBUG), etc.
# allow = DEBUG
allow = for foreach if unless until while
# flowcontrol = carp cluck confess croak die exit goto warn

[Moose::ProhibitLazyBuild]
equivalent_modules = Moo Moo::Role

[-ControlStructures::ProhibitUnlessBlocks]

# Mojo loves chains
[ValuesAndExpressions::ProhibitLongChainsOfMethodCalls]
max_chain_length = 8

[ValuesAndExpressions::ProhibitMagicNumbers]
allowed_values = -1 0 1 2 3 4 5 6 7 8 9 10 20 24 30 32 42 50 60 64 80 90 100 128 180 200 256 270 303 360 400 401 404 443 500 512 1000 1024 3600 8080
# Kind of literals to allow.
# Valid values: Binary, Exp, Float, Hex, Octal.
# allowed_types = Float
# Should anything to the right of a "=>" be allowed?.
allow_to_the_right_of_a_fat_comma = 1
# Names of subroutines that create constants.
# Values that are always included: Readonly, Readonly::Array, Readonly::Hash, Readonly::Scalar, const.
constant_creator_subroutines = constant

[Variables::ProhibitPunctuationVars]
# Values that are always included: $1, $2, $3, $4, $5, $6, $7, $8, $9, $], $_, @_, _.
# These are just too common to exclude
allow = $@ $! $/ $0 $|

# => 1 ------------------------------------------------------------------------------------------------------------ {{{1

# 1 BuiltinFunctions::ProhibitReverseSortBlock [core cosmetic pbp]
# 1 CodeLayout::ProhibitParensWithBuiltins [core cosmetic pbp]
# 1 CodeLayout::ProhibitTrailingWhitespace [core maintenance]
# 1 CodeLayout::RequireTidyCode [core cosmetic pbp]
# 1 CodeLayout::RequireTrailingCommas [core cosmetic pbp]
# 1 Documentation::ProhibitAdjacentLinks [cosmetic pulp]
# 1 Documentation::ProhibitParagraphEndComma [cosmetic pulp]
# 1 Documentation::ProhibitParagraphTwoDots [cosmetic pulp]
# 1 Documentation::RequireFinalCut [cosmetic pulp]
# 1 Documentation::RequirePackageMatchesPodName [core cosmetic]
# 1 Documentation::RequirePodAtEnd [core cosmetic pbp]
# 1 Freenode::EmptyReturn [freenode]
# 1 InputOutput::RequireBracedFileHandleWithPrint [core cosmetic pbp]
# 1 InputOutput::RequireCheckedSyscalls [certrule core maintenance]
# 1 NamingConventions::Capitalization [core cosmetic pbp]
# 1 RegularExpressions::ProhibitEnumeratedClasses [core cosmetic pbp unicode]
# 1 RegularExpressions::ProhibitEscapedMetacharacters [core cosmetic pbp]
# 1 RegularExpressions::ProhibitSingleCharAlternation [core pbp performance]
# 1 RegularExpressions::ProhibitUnusualDelimiters [core cosmetic pbp]
# 1 RegularExpressions::RequireBracesForMultiline [core cosmetic pbp]
# 1 ValuesAndExpressions::ProhibitBarewordDoubleColon [cosmetic pulp]
# 1 ValuesAndExpressions::ProhibitInterpolationOfLiterals [core cosmetic pbp]
# 1 ValuesAndExpressions::RequireInterpolationOfMetachars [core cosmetic pbp]

[InputOutput::RequireCheckedSyscalls]
functions = :builtins
exclude_functions = print close sleep say

[RegularExpressions::ProhibitUnusualDelimiters]
allow_all_brackets = 1

[ValuesAndExpressions::ProhibitInterpolationOfLiterals]
# If the string contains ' characters, allow "" to quote it.
allow_if_string_contains_single_quote = 1
