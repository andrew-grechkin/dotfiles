" vim: filetype=vifm
" man: https://vifm.info/manual.shtml

" => Generic settings --------------------------------------------------------------------------------------------- {{{1

" Command used to edit files in various contexts. The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd=vi
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

set iooptions=fastfilecloning
set dirsize=nitems
if $HAS_MOUSE == '1'
"	set mouse='a'
endif
set slowfs+=/media/nfs

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory. If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set notrash

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

" set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you press return on the file name set this.

set norunexec

" Selected color scheme

colorscheme grand
source $XDG_CONFIG_HOME/vifm/dircolors

" Format for displaying time in file list. For example: TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%F\ %T\ %Z

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files). In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Set custom status line look

set statusline=" %A %d %u:%g%=%T %E %N %t%="

" set millerview

"set slowfs+=/media

set sizefmt=units:iec,precision:2,nospace

" => Commands ----------------------------------------------------------------------------------------------------- {{{1
" man: https://vifm.info/manual.shtml#Command%20macros

command! reload :write | restart

" create
command! take    :mkdir %a | cd %a
command! ln      ln %f:p %D
command! cp      cp -av --sparse=auto --reflink=auto -- %f:p %D/
command! cpl     cp -av --link                       -- %f:p %D/
command! cprsync rsync-copy-fat                         %f:p %D/

" execute
command! run    !! ./%c
command! make   !!make %a

" info
command! df     df -h %m 2> /dev/null

" compare
command! diff   vimdiff %f %F
command! ddiff  diff-dirs %f %F %m

" search
command! vgrep  vim "+grep %a"
command! hlinks hlinks %c %u
" command! hlinks sudo btrfs inspect-internal inode-resolve "$(inode %c)" "$(findmnt -n --raw --output=target -T %d)" %u

" pack
command! p      tar -cvaf   %c.tzst %f
command! z      7z a        %c.7z   %f

" repack
command! rep    archive-convert %c

" unpack
command! unp    archive-extract-here %c

" checksum
command! md     find %c -type f -print0 | sort -z | xargs --null md5sum -b > %c.md5
command! sha    find %c -type f -print0 | sort -z | xargs --null sha256sum -b > %c.sha256

" encrypt/decrypt
command! encrypt gpg-encrypt %f
command! decrypt gpg-decrypt %f

" processing
command! hardlinker hardlinker -av

command! tail tail -f %f

" => File associations -------------------------------------------------------------------------------------------- {{{1

" The file type is for the default programs to be used with a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored. To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE program.

" => File associations: ebooks ------------------------------------------------------------------------------------ {{{1

filextype *.chm,*.epub,*.fb2,*.fbz,*.mobi,*.rtf,*.tcr
	\ {Open with xdg-open}
	\ xdg-open %c:p %i &,
	\ FBReader %c:p %i &,
	\ foliate  %c:p %i &,
	\ calibre  %c:p %i &,
	\ okular   %c:p %i &,
	\ cr3      %c:p %i &,

filextype *.fb2,*.xml,*.gpx,*.xsd,*.kdenlive
	\ {Open with Kate}
	\ kate          %f:p %i &,
	\ {Reformat xml}
	\ reformat -a   %f:p,
	\ {Reformat hard xml}
	\ reformat2-fb2 %f:p,

" => File associations: Djvu, Pdf --------------------------------------------------------------------------------- {{{1
" cat helps to properly show djvu over nfs volumes

filextype *.djvu,*.pdf
	\ {View in zathura}
	\ zathura %i - < %c:p &,
	\ {Open with xdg-open}
	\ xdg-open %c:p %i &,
	\ {View in apvlv}
	\ apvlv,
filextype *.md,*.mkd,*.Rmd,*.mdwiki
	\ {View in glow}
	\ glow -p %f:p,
filextype *.md,*.mkd,*.Rmd,*.mdwiki
	\ {Render to pdf and view}
	\ md-render-view %f:p,
filextype *.pdf
	\ xpdf,
fileviewer *.pdf
	\ pdftotext -nopgbrk %c:p -,

filextype *.mmd,*.mermaid,*.plantuml,*.puml,*.pu
	\ {Render to svg}
	\ diagram-render-view -k %f:p,

" => File associations: PostScript -------------------------------------------------------------------------------- {{{1

filextype *.ps,*.eps,*.ps.gz
	\ {View in zathura}
	\ zathura %i - < %c:p &,
	\ {View in gv}
	\ gv %c:p %i &,

" => File associations: Audio ------------------------------------------------------------------------------------- {{{1

filetype *.cue,
	\*.aac,*.ac3,*.ape,*.flac,*.m4a,*.m4b,*.mp3,*.og[agx],*.opus,*.spx,*.wav,*.wma,*.wv
	\ {Play using mpv in background}
	\ execute-detached mpv --quiet --no-osc --term-osd=force --no-audio-display --vid=no -- %c:p,
	\ {Play using mpv}
	\ mpv --no-osc --term-osd=force --no-audio-display --vid=no -- %c:p %s,
	\ {Play using ffplay}
	\ ffplay -nodisp -autoexit,
	\ {Play using MPlayer}
	\ mplayer,
fileviewer *.aac,*.ac3,*.ape,*.flac,*.m4a,*.m4b,*.mp3,*.og[agx],*.opus,*.spx,*.wav,*.wma,*.wv
	\ mediainfo,
	\ ffprobe -pretty %c 2>&1,
fileviewer *.mp3
	\ mp3info,

filetype *.wav
	\ {Encode to FLAC}
	\ flac -8 %f,
filetype *.wav
	\ {Encode to mp3}
	\ lame -b 128 -m j -h -V 1 -B 256 -F %c %c:r.mp3,
filetype *.aac,*.ape,*.flac,*.m4a,*.og[agx],*.wav,*.wv
	\ {Transcode to MP3}
	\ for F in %f; do ffmpeg -i "$F" "${F%%.*}".mp3; done
filetype *.ape,*.og[agx],*.wav,*.wv
	\ {Transcode to FLAC}
	\ for F in %f; do ffmpeg -i "$F" "${F%%.*}".flac; done
filetype *.ape
	\ {Decode to wav}
	\ mac %c %c:r.wav -d,
filetype *.flac
	\ {Decode to wav}
	\ flac -d %f,
filetype *.wv
	\ {Decode to wav}
	\ wvunpack %f,
filextype *.kar,*.mid,*.midi
	\ timidity -ig -- %f %i &,
"filetype *.kar,*.mid,*.midi
	"\ timidity -inq -- %c,

" => File associations: Video ------------------------------------------------------------------------------------- {{{1

filextype *.3gp,
	\*.as[fx],*.avi,*.dat,*.divx,*.fl[icv],*.lrv,*.m2v,*.m4v,*.mkv,*.mov,*.mp4,*.mpeg,*.mpg,*.mts,
	\*.ogv,*.qt,*.r[am],*.vob,*.webm,*.wmv
	\ {View using mpv}
	\ mpv %f:p %i &,
	\ {View using mpv True color terminal}
	\ mpv %f:p -vo tct 2>/dev/null,
	\ {View using ffplay}
	\ ffplay -fs -autoexit,
	\ {View using mplayer}
	\ mplayer,
fileviewer *.3gp,
	\*.as[fx],*.avi,*.dat,*.divx,*.fl[icv],*.lrv,*.m2v,*.m4v,*.mkv,*.mov,*.mp4,*.mpeg,*.mpg,*.mts,
	\*.ogv,*.qt,*.r[am],*.vob,*.webm,*.wmv
	\ mediainfo,
	\ ffprobe -pretty %c 2>&1,

" => File associations: HTML -------------------------------------------------------------------------------------- {{{1

filextype *.html,*.htm,*.mht,*.mhtml
	\ {Open with default browser}
	\ exo-open --launch WebBrowser %f %i &,
	\ {Extract}
	\ mhtml-parse %c %i &,
filetype *.html,*.htm
	\ links,
	\ lynx,
fileviewer *.htm,*.html
	\ html2text2 %f
fileviewer *.mht,*.mhtml
	\ mhtml-parse -l %f

" => File associations: Images ------------------------------------------------------------------------------------ {{{1

filextype *.bmp,*.dng,*.gif,.*.ico,*.icon,*.jp2,*.jpg,*.jpeg,*.png,*.xpm,*.svg,*.tif,*.thm,*.webp
	\ {View in sxiv}
	\ sxiv %f %c:h %i &,
	\ {Open with xdg-open}
	\ xdg-open %c %i &,
	\ {View in vimiv}
	\ vimiv    %c %i &,
	\ {View in pqiv}
	\ pqiv -i %f %c:h %i &,
	\ {View in gpicview}
	\ gpicview,
fileviewer *.bmp,*.dng,*.gif,.*.ico,*.icon,*.jp2,*.jpg,*.jpeg,*.png,*.xpm,*.svg,*.tif
    \ chafa --clear -c 240 -s %pwx%ph %c,
    \ viu -t -w %pw -h %ph %c,
	\ mediainfo,
	\ identify -verbose,

" => File associations: misc -------------------------------------------------------------------------------------- {{{1

filetype *.spec
	\ {Edit}
	\ vi %c,
	\ {Build for centos 8-stream}
	\ make -f ~/git/public/andrew-grechkin/centos-rpmbuild-docker/Makefile build8 %s,
	\ {Build for centos 9-stream}
	\ make -f ~/git/public/andrew-grechkin/centos-rpmbuild-docker/Makefile build9 %s,

fileviewer *.rpm
	\ rpm -qi %f

filetype CMakeLists.txt
	\ {Build...}
	\ build-cmake %d,

" filetype *.[1-8]
" 	\ man ./%c,
" fileviewer *.[1-8]
" 	\ man ./%c | col -b,

filetype *.json
	\ {View json}
	\ jq -S --indent 2 < %c | bat -l JSON --paging=always,
	\ {Reformat json}
	\ reformat -a %f,
	\ {Convert json -> yaml}
	\ json2yaml %c > %c:r.yaml &,

filetype *.yaml,*.yml
	\ {View yaml}
	\ yaml-sanitize %c | bat -l yaml --paging=always,
	\ {Sanitize yaml}
	\ yaml-sanitize -i %c,
	\ {Convert yaml -> json}
	\ yaml2json %c > %c:r.json &,

filetype *.md5
	\ {Check MD5 hash sum}
	\ md5sum -c %f %S,

filetype *.sha1
	\ {Check SHA1 hash sum}
	\ sha1sum -c %f %S,

filetype *.sha256
	\ {Check SHA256 hash sum}
	\ sha256sum -c %f %S,

filetype *.sha512
	\ {Check SHA512 hash sum}
	\ sha512sum -c %f %S,

filetype *.asc,*.sig
	\ {Check signature}
	\ !!gpg --verify,

fileviewer *.pub
	\ gpg-show %c

fileviewer *.pem,*.crt
	\ openssl x509 -inform PEM -text -in %f

fileviewer *.key
	\ openssl rsa -check -text -noout -in %c

fileviewer *.csr,*.req
	\ openssl req -verify -text -noout -in %c

filetype *.key
	\ {Convert to p12}
	\ certtool --to-p12 --empty-password --load-privkey %c --outfile %c:r.p12,

fileviewer *.key
	\ openssl x509 -inform PEM -in %f -text

filetype *.p12
	\ {Convert to PEM}
	\ openssl pkcs12 -in %c -out %c:r.pem -nodes,
	\ {Import to GPG}
	\ gpgsm --import %c,

filetype *.torrent
	\ ktorrent %f &,
fileviewer *.torrent
	\ dump_torrent -v,

filetype *.gpg
	\ {Decrypt}
	\ gpg-decrypt,
fileviewer *.gpg
	\ gpg --decrypt,

filetype *.base64
	\ {Decode}
	\ base64 --decode %c > %c:r &,

filetype *.base64c
	\ {Decode}
	\ sed -e 's/^#//' %c | base64 --decode > %c:r &,

filetype *.shx
	\ {Decode}
	\ sed -e '1,,/^### Base64 BEGIN/d' %c | sed -e '/^### Base64 END/,,$d' | sed -e 's/^#//g' | base64 -d > %c:r.tgz,

filetype *.txt
	\ {View in less}
	\ less,
	\ {Recode from cp866}
	\ text-recode cp866 %f,
	\ {Recode from cp1251}
	\ text-recode cp1251 %f,
	\ {Recode from koi8}
	\ text-recode koi8 %f,

" Qt projects
filextype *.pro
	\ qtcreator %f &,

filetype cpanfile
	\ {Install Perl modules}
	\ cpanm -nq --installdeps .

filetype *.http
	\ {Request with http-pure}
	\ http-pure %f,

" => File associations: office files ------------------------------------------------------------------------------ {{{1

filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx
	\ libreoffice %f &,
fileviewer *.doc
	\ catdoc,
fileviewer *.docx
	\ docx2txt.pl %c -,

filextype *.ttf
	\ {Open with fontforge}
	\ fontforge %c %i &,

" => File associations: IsoMount ---------------------------------------------------------------------------------- {{{1

filetype *.iso,*.mdf,*.nrg
	\ {Mount with fuseiso}
	\ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

filetype *.iso
	\ {Run with qemu BIOS}
	\ run-iso-bios %c &,
	\ {Run with qemu UEFI}
	\ run-iso-uefi %c &,
	\ {Run with qemu UEFI + USB}
	\ run-iso-uefi-usb %c &,

filetype *.qcow2
	\ {Run with qemu}
	\ run-qcow %c &,
	\ {Mount qcow2}
	\ mount-qcow %c,

" => File associations: archives ---------------------------------------------------------------------------------- {{{1

" ArchiveMount
filetype *.tar,
	\*.tar.bz2,*.tbz2,*.tbz,*.tz2,*.tar.gz,*.tgz,*.taz,*.tar.lz,*.tlzip,*.tar.lzma,*.tlzma,*.tlz,
	\*.tar.lzop,*.tlzo,*.tlzop,*.tar.xz,*.txz,*.tar.zst,*.tzst,*.tar.Z,*.taZ,
	\*.bz2,*.gz,*.lz,*.lzma,*.lzop,*.xz,*.zst,*.Z,
	\*.jar,*.war,*.ear,*.oxt,*.apkg,*.lha,*.ar,*.cpio,*.rpm,*.deb,*.udeb,*.mtree,*.xar,
	\*.eu4
	\ {Mount with archivemount}
	\ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tar,
	\*.tar.bz2,*.tbz2,*.tbz,*.tz2,*.tar.gz,*.tgz,*.taz,*.tar.lz,*.tlzip,*.tar.lzma,*.tlzma,*.tlz,
	\*.tar.lzop,*.tlzo,*.tlzop,*.tar.xz,*.txz,*.tar.zst,*.tzst,*.tar.Z,*.taZ,
	\*.bz2,*.gz,*.lz,*.lzma,*.lzop,*.xz,*.zst,*.Z,
	\*.jar,*.war,*.ear,*.oxt,*.apkg,*.lha,*.ar,*.cpio,*.rpm,*.deb,*.udeb,*.mtree,*.xar
	\ tar taf %c &,

" fuse3-p7zip
filetype *.7z,*.epub,*.whl,
	\*.dsl.dz,*.tar,*.zip,*.ova,*.sfs,*.a,*.so,lib*.so.*,
	\*.apk,*.apm,*.ar,*.arj,*.cab,*.chm,*.cpio,*.cramfs,*.deb,*.dll,*.dmg,*.doc,*.esd,*.exe,
	\*.flv,*.hxs,*.img,*.iso,*.iso,*.jar,*.lib,*.macho,*.msi,*.msp,*.nsis,*.pkg,*.pmd,*.ppt,
	\*.qcow,*.qcow2,*.qcow2c,*.r00,*.rar,*.raw,*.rpm,*.squashfs,*.swf,*.swm,*.sys,*.vdi,*.vhd,*.vmdk,*.wim,*.xar,*.xls,
	\*.tar.bz2,*.tbz2,*.tbz,*.tz2,*.tar.gz,*.tgz,*.taz,*.tar.lz,*.tlzip,*.tar.lzma,*.tlzma,*.tlz,
	\*.tar.lzop,*.tlzo,*.tlzop,*.tar.xz,*.txz,*.tar.zst,*.tzst,*.tar.Z,*.taZ,
	\*.bz2,*.gz,*.lz,*.lzma,*.lzop,*.xz,*.zst,*.Z
	\ {Mount with fuse3-p7zip}
	\ FUSE_MOUNT|fuse3-p7zip %SOURCE_FILE %DESTINATION_DIR,
	\ {Extract to subdir...}
	\ archive-extract %f 2>/dev/null,
	\ {Extract here...}
	\ archive-extract --here %f 2>/dev/null,
	\ {Convert to tar.zstd...}
	\ archive-convert %f 2>/dev/null,
fileviewer *.7z,*.whl,
	\*.dsl.dz,*.tar,*.zip,*.ova,*.sfs,
	\*.apk,*.apm,*.ar,*.arj,*.cab,*.chm,*.cpio,*.cramfs,*.deb,*.dll,*.dmg,*.doc,*.esd,*.exe,
	\*.flv,*.hxs,*.img,*.iso,*.iso,*.jar,*.lib,*.macho,*.msi,*.msp,*.nsis,*.pkg,*.pmd,*.ppt,
	\*.qcow,*.qcow2,*.qcow2c,*.r00,*.rar,*.raw,*.rpm,*.squashfs,*.swf,*.swm,*.sys,*.vdi,*.vhd,*.vmdk,*.wim,*.xar,*.xls
	\ 7z l %c &,

" => File associations: S3 mount ---------------------------------------------------------------------------------- {{{1

filetype *.s3fs
	\ {Mount with s3fs}
	\ FUSE_MOUNT2|s3fs %PARAM %DESTINATION_DIR %FOREGROUND,

" => File associations: ssh mount --------------------------------------------------------------------------------- {{{1

filetype *.ssh
	\ {Mount with sshfs}
	\ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" => File associations: ftp mount --------------------------------------------------------------------------------- {{{1

filetype *.ftp
	\ {Mount with curlftpfs}
	\ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" => File associations: encrypted fs mount ------------------------------------------------------------------------ {{{1

filetype cryfs.config
	\ {Mount with cryfs}
	\ FUSE_MOUNT2|cryfs -c %SOURCE_FILE %d %DESTINATION_DIR %FOREGROUND,

filetype *.encfs
	\ {Mount with encfs}
	\ FUSE_MOUNT2|encfs %PARAM %DESTINATION_DIR %FOREGROUND,

" => File associations: ansible role ------------------------------------------------------------------------------ {{{1

filetype main.yaml
	\ {Execute ansible role}
	\ ansible-role  %d:h -K --ask-vault-pass -i localhost,, ,

filetype *.svct
	\ {Execute service-test}
	\ test-service -vv %c,

" => Default file execution --------------------------------------------------------------------------------------- {{{1

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
"filetype *
"	\ xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

filetype *[^/],.*[^/]
	\ {Edit in vim}
	\ vi %c %n,
	\ {View in less}
	\ less %c %n,
	\ {Show history}
	\ git fh -- %c %n || true,
	\ {Show file}
	\ show-file %c | less %c %n,
	\ {Compress}
	\ archive-create %f,
	\ {Show hardlins}
	\ sudo hardlinks-for %f | less,

filetype *[^/$|.gpg$],.*[^/$|.gpg$]
	\ {Encrypt}
	\ gpg-encrypt %f,
filetype *[^/$|.asc$|.sig$],.*[^/$|.asc$|.sig$]
	\ {Sign}
	\ gpg-sign %f,
filetype *[^/$|.base64$],.*[^/$|.base64$]
	\ {Encode base64}
	\ base64 %c > %c.base64,

filetype */,.*/
	\ {Show dir}
	\ show-dir %c | less,
	\ {Compress zstd}
	\ archive-create %f,
	\ {Compress tar.gz}
	\ archive-create --type="tar.gz" %f,
	\ {Play dir recursively background}
	\ execute-detached mpv --quiet --no-osc --term-osd=force --no-audio-display --vid=no -- %c:p,
	\ {Play dir recursively foreground}
	\ mpv --no-osc --term-osd=force --no-audio-display --vid=no -- %c:p %s,

" => Preview ------------------------------------------------------------------------------------------------------ {{{1

" Default file viewer
fileviewer *[^/],.*[^/]
	\ show-file,

" Default dir viewer
fileviewer */,.*/
	\ show-dir,

" => Save state between sessions ---------------------------------------------------------------------------------- {{{1

" What should be saved automatically between vifm sessions. Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks

" => Examples of configuring both panels -------------------------------------------------------------------------- {{{1

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" => mappings ----------------------------------------------------------------------------------------------------- {{{1

nnoremap <Esc> :hideui<CR>

" Start shell in current directory
nnoremap s :shell<CR>

" Display sorting dialog
nnoremap S :sort<CR>

" Toggle visibility of preview window
nnoremap w :view<CR>
vnoremap w :view<CR>gv

" Open file in existing instance of gvim
nnoremap o :!gvim --remote-tab-silent %f<CR>
" Open file in new instance of gvim
nnoremap O :!gvim %f<CR>

" Open file in the background using its default program
nnoremap gb :file &<CR>l

" Interaction with system clipboard
" Yank current directory path into the clipboard
nnoremap yd :!echo -n %d   %i | clipcopy<CR>
" Yank current file path into the clipboard
nnoremap yp :!echo -n %c:p %i | clipcopy<CR>
" yank current filename without path and extension into the clipboard
nnoremap yn :!echo -n %c:r %i | clipcopy<CR>
" yank current filename without path into the clipboard
nnoremap yf :!echo -n %c   %i | clipcopy<CR>

" Mappings for faster renaming
nnoremap A  cw
nnoremap I  cw<c-a>
nnoremap cc cw<c-u>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart<CR>

" Open console in current directory
nnoremap ,t :!exo-open --launch TerminalEmulator &<CR>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<CR>

" Example of standard two-panel file managers mappings
nnoremap <f2>  :file<CR>
nnoremap <f3>  :!{ show-dir %c || show-file %c } | less<CR>
nnoremap <f4>  :edit %c %n<CR>
nnoremap <f5>  :copy<CR>
nnoremap <f6>  :move<CR>
nnoremap <f7>  :mkdir<SPACE>
nnoremap <f8>  :delete<CR>
nnoremap <f10> :quit<CR>
nnoremap <c-@> :sync<CR>

nnoremap [t    :tabprev<CR>
nnoremap ]t    :tabnext<CR>

nnoremap <silent> rp :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hah    --partial --info=name1 %f:p %D/<CR>
vnoremap <silent> rp :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hah    --partial --info=name1 %f:p %D/<CR>
nnoremap <silent> ru :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hahu   --partial --info=name1 %f:p %D/<CR>
vnoremap <silent> ru :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hahu   --partial --info=name1 %f:p %D/<CR>
nnoremap <silent> rs :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -HahuXx --partial --info=name1 --delete %f:p %D/<CR>
vnoremap <silent> rs :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -HahuXx --partial --info=name1 --delete %f:p %D/<CR>
nnoremap <silent> rP :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hah    --partial --info=name1 --remove-source-files %f:p %D/ && tsp -d find %f -type d -empty -exec rmdir --ignore-fail-on-non-empty -p {} \+<CR>
vnoremap <silent> rP :!tsp rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hah    --partial --info=name1 --remove-source-files %f:p %D/ && tsp -d find %f -type d -empty -exec rmdir --ignore-fail-on-non-empty -p {} \+<CR>

nnoremap Rp :!rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hah    --partial --info=progress2 %f:p %D/<CR>
vnoremap Rp :!rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hah    --partial --info=progress2 %f:p %D/<CR>
nnoremap Ru :!rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hahu   --partial --info=progress2 %f:p %D/<CR>
vnoremap Ru :!rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -Hahu   --partial --info=progress2 %f:p %D/<CR>
nnoremap Rs :!rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -HahuXx --partial --info=progress2 --delete %f:p %D/<CR>
vnoremap Rs :!rsync --sparse --exclude="@eaDir" --exclude="#recycle" --exclude="#snapshot" --exclude=".Trash-*" -HahuXx --partial --info=progress2 --delete %f:p %D/<CR>

" => fzf integration (ctrl-t, ctrl-p) ----------------------------------------------------------------------------- {{{1

command! FZFcd     :set noquickview | :execute 'cd "'.system('unset REPORTTIME; _fzf_compgen_helper "~" d | fzf --reverse 2>/dev/tty || echo "%c"').'"%IU' | redraw
command! FZFfind   :set noquickview | :execute 'goto "'.system('unset REPORTTIME; _fzf_compgen_helper "." f | fzf --reverse 2>/dev/tty || echo "%c"').'"%IU' | redraw
command! FZFlocate :set noquickview | :execute 'goto "'.system('unset REPORTTIME; command locate / | fzf --reverse 2>/dev/tty || echo "%c"').'"%IU' | redraw

nnoremap <A-c> :FZFcd<CR>
nnoremap <C-p> :FZFfind<CR>
nnoremap <C-t> :FZFlocate<CR>

" => Various customization examples ------------------------------------------------------------------------------- {{{1

" Use ag (the silver searcher) instead of grep
" set grepprg='ag --hidden --line-numbers %i %a %s'
set grepprg='rg --hidden --column -- %i %A %s'

" set findprg="find %s %a -print , -type d \( ! -readable -o ! -executable \) -prune"
set findprg='fd --hidden -- %A'

" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername

" => bookmarks ---------------------------------------------------------------------------------------------------- {{{1

mark a ~/.local/share/rest-console
mark b ~/.local/script
mark c ~/git/private/dotfiles                    .config
mark d ~/git/private/dotfiles/submodules/private ssh
mark h ~
mark m /media/nfs/home
mark n ~/git/private/dotfiles/.config/nvim       init.lua
mark r \/                                        home
mark s ~/.local/share
mark t ~/.local/state                            nvim
mark u /run/user
mark u ~/.local/usr

" => file icons --------------------------------------------------------------------------------------------------- {{{1

set classify=' ::../::, :dir:/, :exe:, :reg:, :link:'
set classify+=' ::.editorconfig,,.eslintrc.js,,.eslintrc.json,,.npmrc,,.nvmrc,,.prettierrc.js,,.prettierrc.yaml,,package.json,,project.json,,tsconfig*.json::'
set classify+=' ::package-lock.json::'
set classify+=' ::*.sh::, ::*.cpp::, ::*.c::, ::*.hpp::, ::*.js::, ::*.pl,,*.pm::, ::*.py::, ::*.rb::, ::*.go::, ::*.json::, ::*.ts::,󰢱 ::*.lua::'
set classify+='© ::/^copying|license$/::, ::.git/,,*.git/::'
set classify+=' ::*.fb2,,*.epub,,*.djvu,,*.pdf::'
set classify+=' ::*.doc,,*.docx::, ::*.xls,,*.xls[mx]::, ::*.ppt,,*.pptx::'
set classify+=' ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.zst,,*.tzst,,*.xz,,*.z,,*.zip,,*.zoo::, ::*.deb::, ::*.rpm::, ::*.whl::'
set classify+=' ::*.bmp,,*.gif,,*.jp2,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd,,*.svg,,*.svgz::'
set classify+=' ::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
set classify+=' ::*.avi,,*.axv,,*.divx,,*.m2v,,*.m4p,,*.m4v,,.mka,,*.mkv,,*.mov,,*.mp4,,*.lrv,,*.flv::'
set classify+=' ::*.mp4v,,*.mpeg,,*.mpg,,*.nuv,,*.ogv,,*.pbm,,*.pgm,,*.qt,,*.vob,,*.wmv,,*.xvid::'
set classify+=' ::*.htm,,*.html,,*.[msx]html,,*.mht,,*.xml::'
set classify+=' ::*.diff,,*.patch::'
set classify+=' ::*.img,,*.iso::'
set classify+=' ::*.torrent::'
set classify+=' ::.gitignore,,.npmignore,,.eslintignore::'
