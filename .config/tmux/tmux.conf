# vim: nowrap foldmethod=marker filetype=tmux
# man: tmux
# cheatsheet: https://tmuxcheatsheet.com/

# TERM options (https://copr.fedorainfracloud.org/coprs/panagiotiss/tmux/)
%if #{m:*256*,#{TERM}}
	# support 256 colors and HOME, END ...
	if-shell 'test -f /usr/share/terminfo/s/screen-256color' {
		set  -g default-terminal   'screen-256color'
	}
	if-shell 'test -f /usr/lib/terminfo/s/screen-256color' {
		set  -g default-terminal   'screen-256color'
	}
	if-shell 'test -f /usr/lib/terminfo/t/tmux-256color' {
		set  -g default-terminal   'tmux-256color'
	}
	if-shell 'test -f /usr/share/terminfo/t/tmux-256color' {
		set  -g default-terminal   'tmux-256color'
	}

	set -as terminal-features ",*:hyperlinks"
	set -sa terminal-overrides ',*256col*:Tc,*256col*:RGB'                     # true color support
	set -sa terminal-overrides ',*256col*:Smulx=\E[4::%p1%dm'                  # support all types of underlines
	set -sa terminal-overrides ',*256col*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underline colors
	# set -as terminal-overrides ',*:Hls=\E]8;id=%p1%s;%p2%s\E\\:Hlr=\E]8;;\E\\'
%else
	if-shell 'test -f /usr/share/terminfo/s/screen' {
		set  -g default-terminal   'screen'
	}
	if-shell 'test -f /usr/share/terminfo/t/tmux' {
		set  -g default-terminal   'tmux'
	}
%endif

if-shell 'test -d /volume1/local/arch' {
	set -g default-shell '/volume1/local/arch/usr/bin/zsh'
}

# https://github.com/tmux/tmux/wiki/Modifier-Keys
# set -s extended-keys on
# set -as terminal-features 'xterm*:extkeys'
# set -as terminal-features 'tmux*:clipboard:ccolour:cstyle:focus:title:extkeys'

# => server ------------------------------------------------------------------------------------------------------- {{{1

set  -gs escape-time 0                                                          # Lower escape timing for quicker response to scroll-buffer/vim access
set  -g  focus-events on                                                        # focus events enabled for terminals that support them
set  -g  set-clipboard on

# => session ------------------------------------------------------------------------------------------------------ {{{1

set  -g base-index 1                                                           # Start numbering windows at 1
set  -g detach-on-destroy off
set  -g history-limit 50000
set  -g mouse on
set  -g renumber-windows on                                                    # Renumber windows on close
set  -g set-titles on
set  -g status-keys vi
set  -g visual-activity on
set  -g word-separators ' 	@:,.'

# => window ------------------------------------------------------------------------------------------------------- {{{1

setw -g automatic-rename on                                                    # Automatically set window title
setw -g pane-base-index 0                                                      # Start numbering panes at 0
setw -g mode-keys vi
setw -g monitor-activity off                                                   # Set window notifications off
setw -g other-pane-width 70

# => mouse bindings ----------------------------------------------------------------------------------------------- {{{1

bind   -n MouseDown2Status  kill-window                                        # middle click on a window name in status bar to kill it
bind   -n MouseDown2Pane    select-pane \; paste-buffer
#bind   -n DoubleClick1Pane  select-pane \; select-layout main-vertical \; swap-pane -d -t {left}
bind   -n DoubleClick1Pane  select-pane \; copy-mode \; send-keys -X select-word \; send-keys -X copy-pipe 'clipcopy'

# => copy mode mouse bindings ------------------------------------------------------------------------------------- {{{1

unbind -T copy-mode-vi MouseDragEnd1Pane                                       # don't exit copy mode on mouse selection
bind   -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'clipcopy'
bind   -T copy-mode-vi MouseDown2Pane    send-keys -X copy-selection-and-cancel \; paste-buffer
bind   -T copy-mode-vi MouseDown3Pane    send-keys -X cancel
bind   -T copy-mode-vi DoubleClick1Pane  select-pane \; send-keys -X select-word \; send-keys -X copy-pipe 'clipcopy'

# => key bindings ------------------------------------------------------------------------------------------------- {{{1

set  -g prefix '`'                                                             # Setting the prefix from C-b to `
unbind    'C-b'                                                                # Free the original Ctrl-b prefix keybinding
bind      '`'   send-prefix                                                    # Ensure that we can send prefix to other apps

unbind    ' '
bind      ' '   run-shell "tmux split-window menu-tmux-sessionizer"
bind      'b'   run-shell "tmux split-window menu-rest"
bind      'v'   run-shell "tmux split-window bks-component-manage"
bind      '='   next-layout
bind      'S'   confirm-before kill-session

# => xmonad-like panes, create new window with prepared layout (1 main and 3 sattelites) -------------------------- {{{1

# bind   -n 'M-m' select-layout main-vertical \; move-pane -b -t 0 \; swap-pane -d -t 0 \; select-layout main-vertical      # make current pane the main one
# bind   -n 'M-q' select-layout main-vertical \; move-pane -b -s 1 -t 0 \; swap-pane -d -t 0 \; select-layout main-vertical # make the first satellite pane the main one
# bind   -n 'M-w' select-layout main-vertical \; move-pane -b -s 2 -t 0 \; swap-pane -d -t 0 \; select-layout main-vertical
# bind   -n 'M-e' select-layout main-vertical \; move-pane -b -s 3 -t 0 \; swap-pane -d -t 0 \; select-layout main-vertical
# bind   -n 'M-r' select-layout main-vertical \; move-pane -b -s 4 -t 0 \; swap-pane -d -t 0 \; select-layout main-vertical

# => edit configuration and reload -------------------------------------------------------------------------------- {{{1

bind      'C-a' setw synchronize-panes \; display "synchronize-panes is now #{?pane_synchronized,on,off}"
bind      'C-e' new-window -n 'tmux.conf' "bash -c '~/.local/script/vi ~/.config/tmux/tmux.conf && tmux source ~/.config/tmux/tmux.conf && tmux display \"Config reloaded\"'"
bind      'C-r' source-file ~/.config/tmux/tmux.conf \; display 'Config reloaded' # reload tmux configuration

# => buffer operations -------------------------------------------------------------------------------------------- {{{1

bind      'e'   run-shell "tmux-edit-history"
bind      'C-l' send-keys 'C-l' \; run 'sleep 0.1' \; clear-history            # clear shell screen and tmux history buffer
bind      'C-s' run-shell "tmux-pane | pastebin"

bind   -T copy-mode-vi 'C-l' send-keys -X cancel \; send-keys 'C-l' \; run 'sleep 0.1' \; clear-history

# => window splitting --------------------------------------------------------------------------------------------- {{{1

unbind    '%'                                                                  # Remove default binding since we’re replacing
unbind    '"'
bind      "'"   split-window -v -c "#{pane_current_path}"
bind      '"'   split-window -h -c "#{pane_current_path}"
bind   -n "M-'" split-window -v -c "#{pane_current_path}"
bind   -n 'M-"' split-window -h -c "#{pane_current_path}"

# => smart pane switching with awareness of vim splits See: https://github.com/christoomey/vim-tmux-navigator ----- {{{1

TMUX_IS_VIM="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind      'C-h' resize-pane -L 10
bind      'C-j' resize-pane -D 5
bind      'C-k' resize-pane -U 5
bind      'C-l' resize-pane -R 10
bind      'h'   if "$TMUX_IS_VIM" 'send-keys M-h' 'select-pane -L'
bind      'j'   if "$TMUX_IS_VIM" 'send-keys M-j' 'select-pane -D'
bind      'k'   if "$TMUX_IS_VIM" 'send-keys M-k' 'select-pane -U'
bind      'l'   if "$TMUX_IS_VIM" 'send-keys M-l' 'select-pane -R'
bind      '\'   if "$TMUX_IS_VIM" 'send-keys M-\' 'select-pane -l'
bind   -n 'M-h' if "$TMUX_IS_VIM" 'send-keys M-h' 'select-pane -L'
bind   -n 'M-j' if "$TMUX_IS_VIM" 'send-keys M-j' 'select-pane -D'
bind   -n 'M-k' if "$TMUX_IS_VIM" 'send-keys M-k' 'select-pane -U'
bind   -n 'M-l' if "$TMUX_IS_VIM" 'send-keys M-l' 'select-pane -R'
bind   -n 'M-\' if "$TMUX_IS_VIM" 'send-keys M-\' 'select-pane -l'
bind   -T copy-mode-vi 'M-h' select-pane -L
bind   -T copy-mode-vi 'M-j' select-pane -D
bind   -T copy-mode-vi 'M-k' select-pane -U
bind   -T copy-mode-vi 'M-l' select-pane -R
bind   -T copy-mode-vi 'M-\' select-pane -l

# => windows ------------------------------------------------------------------------------------------------------ {{{1

bind   -n 'M-1'     select-window -t :=1
bind   -n 'M-2'     select-window -t :=2
bind   -n 'M-3'     select-window -t :=3
bind   -n 'M-4'     select-window -t :=4
bind   -n 'M-5'     select-window -t :=5
bind   -n 'M-6'     select-window -t :=6
bind   -n 'M-7'     select-window -t :=7
bind   -n 'M-8'     select-window -t :=8
bind   -n 'M-9'     select-window -t :=9
bind   -n 'M-?'     swap-window   -t +1\; select-window -t +1                  # move window one position to the right
bind   -n 'M-N'     swap-window   -t -1\; select-window -t -1                  # move window one position to the left
bind   -n 'M-n'     previous-window
bind   -n 'M-.'     next-window
bind   -n 'M-Enter' new-window

# => copy mode key bindings --------------------------------------------------------------------------------------- {{{1

#unbind                 '['
bind                   'Escape'          copy-mode \; send-keys 0
#unbind                 'p'
#bind                   'p'               paste-buffer
bind                   'u'               copy-mode \; send-keys 0 \; send-keys -X page-up
bind   -n              'M-u'             copy-mode \; send-keys 0 \; send-keys -X page-up
bind   -T copy-mode-vi 'u'               send-keys -X page-up
bind   -T copy-mode-vi 'M-u'             send-keys -X page-up
bind   -T copy-mode-vi 'M-d'             send-keys -X page-down
bind   -T copy-mode-vi 'v'               send-keys -X begin-selection
bind   -T copy-mode-vi 'y'               send-keys -X copy-pipe-and-cancel 'clipcopy'
bind   -T copy-mode-vi 'Enter'           send-keys -X copy-pipe-and-cancel 'clipcopy'
bind   -T copy-mode-vi 'Escape'          send-keys -X cancel

# => nested sessions support, disables prefix in outer session and send everything to inner ----------------------- {{{1

bind -n 'M-F12' \
	set prefix None \;\
	set key-table off \;\
	if -F "#{pane_in_mode}" 'send-keys -X cancel' \;\
	refresh-client -S \;\

bind -T off 'M-F12' \
	set -u prefix \;\
	set -u key-table \;\
	set -u status-style \;\
	set -u window-status-current-style \;\
	set -u window-status-current-format \;\
	refresh-client -S

%if #{==:#{SSH_CLIENT},}
	TMUX_COLOR_FG_LIGHT='colour50'
	TMUX_COLOR_FG_BRIGHT='colour231'
	TMUX_COLOR_BG_DARK='colour24'
	TMUX_COLOR_BG_MEDIUM='colour30'
	TMUX_COLOR_BG_LIGHT='colour36'
	set  -g status-position              'top'
%else
	TMUX_COLOR_FG_LIGHT='colour49'
	TMUX_COLOR_FG_BRIGHT='colour231'
	TMUX_COLOR_BG_DARK='colour23'
	TMUX_COLOR_BG_MEDIUM='colour29'
	TMUX_COLOR_BG_LIGHT='colour35'
	set  -g status-position              'bottom'
%endif

# => status bar --------------------------------------------------------------------------------------------------- {{{1

TMUX_ST_IS_KEYS_OFF="#[fg=$TMUX_COLOR_FG_LIGHT]#([ $(tmux show-option -qv key-table) = 'off' ] && echo '[OFF] ')"
TMUX_ST_DATE="#[bg=$TMUX_COLOR_BG_MEDIUM,fg=$TMUX_COLOR_FG_LIGHT] %Y-%m-%d "
TMUX_ST_TIME="#[bg=$TMUX_COLOR_BG_LIGHT,fg=$TMUX_COLOR_FG_BRIGHT] %H:%M %Z"

set  -g status                           'on'
set  -g status-justify                   'left'
set  -g status-style                     "bg=$TMUX_COLOR_BG_DARK,fg=$TMUX_COLOR_FG_BRIGHT"
set  -g status-left                      "#[bg=$TMUX_COLOR_BG_LIGHT,fg=$TMUX_COLOR_FG_BRIGHT] #H "
set  -g status-right                     "#{prefix_highlight} ${TMUX_ST_IS_KEYS_OFF}${TMUX_ST_DATE}${TMUX_ST_TIME}"
set  -g status-left-length               '100'
set  -g status-right-length              '100'

set  -g message-style                    "bg=$TMUX_COLOR_BG_MEDIUM,fg=$TMUX_COLOR_FG_BRIGHT"
set  -g message-command-style            "bg=$TMUX_COLOR_BG_MEDIUM,fg=$TMUX_COLOR_FG_BRIGHT"

set  -g pane-border-style                "fg=$TMUX_COLOR_BG_DARK"
set  -g pane-active-border-style         "fg=$TMUX_COLOR_FG_LIGHT"

setw -g window-status-style              "bg=$TMUX_COLOR_BG_DARK,fg=$TMUX_COLOR_FG_BRIGHT"
setw -g window-status-activity-style     "bg=$TMUX_COLOR_BG_DARK,fg=$TMUX_COLOR_BG_LIGHT"
setw -g window-status-current-format     "#[bg=$TMUX_COLOR_BG_MEDIUM,fg=$TMUX_COLOR_FG_BRIGHT] #I: #W #[bg=$TMUX_COLOR_BG_DARK,fg=$TMUX_COLOR_BG_MEDIUM]"
setw -g window-status-format             "#[bg=$TMUX_COLOR_BG_DARK,fg=$TMUX_COLOR_FG_LIGHT] #I: #W "
setw -g window-status-separator          ''
