#!/usr/bin/env -S just --justfile

# https://just.systems/man/en/

@default:
	just --list --justfile {{justfile()}}

[no-cd]
@init-nodejs:
	rsync-copy ~/.local/share/skel/nodejs/ ./

[no-cd]
@init-ts-app:
	rsync-copy ~/.local/share/skel/ts-app/ ./
	npm install --no-audit --no-fund

[no-exit-message]
@audio dir="/media/nfs/home/music":
	just -g audio-list "{{dir}}" | fzf-execute

[no-exit-message]
@books dir="/media/nfs/home/doc/@technical":
	just -g books-list "{{dir}}" | fzf-execute

[no-exit-message]
@films dir="/media/nfs/home/video":
	just -g films-list "{{dir}}" | fzf-execute

[no-exit-message]
audio-list dir="/media/nfs/home/music":
	#!/usr/bin/env bash
	set -Eeuo pipefail

	{
		cd "{{dir}}"
		while read -r line; do
			echo -e "$line\tmpv --quiet --no-osc --term-osd=force --no-audio-display -- \"{{dir}}/$line\""
		done < <(fd -t dir --min-depth 2 --max-depth 4 --relative-path)
	} | sort

[no-exit-message]
books-list dir="/media/nfs/home/doc/@technical":
	#!/usr/bin/env bash
	set -Eeuo pipefail

	{
		cd "{{dir}}"
		while read -r LINE; do
			if [[ "$LINE" =~ \.pdf$|\.djvu$ ]]; then
				echo -e "$LINE\tzathura - <\"{{dir}}/$LINE\""
			elif [[ "$LINE" =~ \.fb2$|\.epub$|\.ePub$ ]]; then
				echo -e "$LINE\txdg-open \"{{dir}}/$LINE\""
			fi
		done < <(fd --no-ignore -t file -e pdf -e djvu -e fb2 -e epub --relative-path)
	} | sort

[no-exit-message]
films-list dir="/media/nfs/home/video":
	#!/usr/bin/env bash
	set -Eeuo pipefail

	{
		cd "{{dir}}"
		while read -r line; do
			echo -e "$line\tmpv --quiet -- \"{{dir}}/$line\""
		done < <(fd -t file -e webm -e mkv -e avi -e mp4 -e ts --relative-path)
	} | sort
